{"ast":null,"code":"import BoundingBox from './BoundingBox.js';\nimport CasusBlock from './CasusBlock.js';\nimport EmptyBlock from './EmptyBlock.js';\nimport measureText from './measureText.js';\nimport Vec from './Vec.js';\nimport { SET_VARIABLE_SET_WIDTH, SET_VARIABLE_TO_WIDTH, RAMP_WIDTH, VPADDING } from './generateCornerPerim.js';\n\nclass SetVariableBlock extends CasusBlock {\n  constructor(variableName, paramType) {\n    super();\n    this.variableName = variableName;\n    this.expressionBlock = new EmptyBlock(paramType);\n    this._variableNameBoundingBox = measureText(variableName);\n  }\n\n  precompBounds() {\n    this.expressionBlock.precompBounds();\n    const width = RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w + SET_VARIABLE_TO_WIDTH + this.expressionBlock.boundingBox.w + RAMP_WIDTH;\n    const height = VPADDING + this.expressionBlock.boundingBox.h + VPADDING;\n    this.boundingBox = new BoundingBox(0, 0, width, height);\n  }\n\n  precompXY(x, y) {\n    this.boundingBox.x = x;\n    this.boundingBox.y = y;\n    const expressionX = x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w + SET_VARIABLE_TO_WIDTH;\n    const expressionY = y + VPADDING;\n    this.expressionBlock.precompXY(expressionX, expressionY);\n  }\n\n  getChildBlocks() {\n    return [this.expressionBlock];\n  }\n\n  removeBlockAt(v, removeAfter) {\n    const expressionRes = this.expressionBlock.removeBlockAt(v, removeAfter);\n\n    if (expressionRes.length > 0) {\n      return expressionRes;\n    }\n\n    if (this.expressionBlock.boundingBox.contains(v) && this.expressionBlock.draggable()) {\n      return [this.expressionBlock];\n    }\n\n    return [];\n  }\n\n  getPerim() {\n    const toReturn = [];\n    const bounds = this.boundingBox;\n    toReturn.push(new Vec(bounds.x, bounds.y));\n    toReturn.push(new Vec(bounds.x + bounds.w, bounds.y));\n    toReturn.push(new Vec(bounds.x + bounds.w, bounds.y + bounds.h));\n    toReturn.push(new Vec(bounds.x, bounds.y + bounds.h));\n    return toReturn;\n  }\n\n  drawSelf(ctx) {\n    ctx.fillStyle = '#ee22aa';\n    ctx.fillRect(this.boundingBox.x, this.boundingBox.y, this.boundingBox.w, this.boundingBox.h);\n    ctx.fillStyle = '#000000';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    ctx.fillText('set', this.boundingBox.x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH / 2, this.boundingBox.y + this.boundingBox.h / 2);\n    ctx.fillText(this.variableName, this.boundingBox.x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w / 2, this.boundingBox.y + this.boundingBox.h / 2);\n    ctx.fillText('to', this.boundingBox.x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w + SET_VARIABLE_TO_WIDTH / 2, this.boundingBox.y + this.boundingBox.h / 2);\n  }\n\n  getReturnType() {\n    return 'VOID';\n  }\n\n  tryToPlace(v, blockToPlace, ctx) {\n    var _this$expressionBlock;\n\n    if (!this.boundingBox.contains(v)) {\n      return null;\n    }\n\n    this.expressionBlock = (_this$expressionBlock = this.expressionBlock.tryToPlace(v, blockToPlace, ctx)) !== null && _this$expressionBlock !== void 0 ? _this$expressionBlock : this.expressionBlock;\n    return null;\n  }\n\n}\n\nexport default SetVariableBlock;","map":{"version":3,"sources":["/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blocks/SetVariableBlock.js"],"names":["BoundingBox","CasusBlock","EmptyBlock","measureText","Vec","SET_VARIABLE_SET_WIDTH","SET_VARIABLE_TO_WIDTH","RAMP_WIDTH","VPADDING","SetVariableBlock","constructor","variableName","paramType","expressionBlock","_variableNameBoundingBox","precompBounds","width","w","boundingBox","height","h","precompXY","x","y","expressionX","expressionY","getChildBlocks","removeBlockAt","v","removeAfter","expressionRes","length","contains","draggable","getPerim","toReturn","bounds","push","drawSelf","ctx","fillStyle","fillRect","font","textAlign","textBaseline","fillText","getReturnType","tryToPlace","blockToPlace"],"mappings":"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","sourcesContent":["//@flow strict\n\nimport BoundingBox from './BoundingBox.js';\nimport CasusBlock from './CasusBlock.js';\nimport EmptyBlock from './EmptyBlock.js';\nimport measureText from './measureText.js';\nimport Vec from './Vec.js';\n\nimport {\n\tSET_VARIABLE_SET_WIDTH, \n\tSET_VARIABLE_TO_WIDTH, \n\tRAMP_WIDTH, \n\tVPADDING\n} from './generateCornerPerim.js';\n\nimport type {DataType} from './DataType.js'\n\nclass SetVariableBlock extends CasusBlock {\n\n\tvariableName: string;\n\texpressionBlock: CasusBlock;\n\t_variableNameBoundingBox: BoundingBox;\n\n\tconstructor(variableName: string, paramType: DataType) {\n\t\tsuper();\n\n\t\tthis.variableName = variableName;\n\t\tthis.expressionBlock = new EmptyBlock(paramType);\n\t\tthis._variableNameBoundingBox = measureText(variableName);\n\t}\n\n\tprecompBounds(): void {\n\t\tthis.expressionBlock.precompBounds();\n\n\t\tconst width = RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w + \n\t\t\tSET_VARIABLE_TO_WIDTH + this.expressionBlock.boundingBox.w + RAMP_WIDTH;\n\t\tconst height = VPADDING + this.expressionBlock.boundingBox.h + VPADDING;\n\n\t\tthis.boundingBox=new BoundingBox(\n\t\t\t0, \n\t\t\t0, \n\t\t\twidth,\n\t\t\theight\n\t\t);\t\n\t}\n\n\tprecompXY(x: number, y:number): void {\n\t\tthis.boundingBox.x=x;\n\t\tthis.boundingBox.y=y;\n\t\tconst expressionX = x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w\n\t\t\t+ SET_VARIABLE_TO_WIDTH;\n\t\tconst expressionY = y + VPADDING;\n\n\t\tthis.expressionBlock.precompXY(expressionX, expressionY);\n\t}\n\n\tgetChildBlocks(): Array<CasusBlock> {\n\t\treturn [this.expressionBlock];\n\t}\n\n\tremoveBlockAt(v: Vec, removeAfter: boolean): Array<CasusBlock> {\n\t\tconst expressionRes=this.expressionBlock.removeBlockAt(v, removeAfter);\n\t\tif (expressionRes.length > 0) {\n\t\t\treturn expressionRes;\n\t\t}\n\t\tif (this.expressionBlock.boundingBox.contains(v) && this.expressionBlock.draggable()) {\n\t\t\treturn [this.expressionBlock];\n\t\t}\n\t\treturn [];\n\t}\n\n\tgetPerim(): Array<Vec> {\n\t\tconst toReturn: Array<Vec> = [];\n\t\tconst bounds=this.boundingBox;\n\n\t\ttoReturn.push(new Vec(bounds.x, bounds.y));\n\t\ttoReturn.push(new Vec(bounds.x+bounds.w, bounds.y));\n\t\ttoReturn.push(new Vec(bounds.x+bounds.w, bounds.y+bounds.h));\n\t\ttoReturn.push(new Vec(bounds.x, bounds.y+bounds.h));\n\n\t\treturn toReturn;\n\t}\n\n\tdrawSelf(ctx: CanvasRenderingContext2D): void {\n\t\tctx.fillStyle = '#ee22aa';\n\n\t\tctx.fillRect(this.boundingBox.x, this.boundingBox.y, this.boundingBox.w, this.boundingBox.h);\n\n\t\tctx.fillStyle = '#000000';\n\t\tctx.font = '16px Arial';\n\t\tctx.textAlign = 'center';\n\t\tctx.textBaseline = 'middle';\n\n\t\tctx.fillText(\n\t\t\t'set', \n\t\t\tthis.boundingBox.x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH/2,\n\t\t\tthis.boundingBox.y + this.boundingBox.h/2\n\t\t);\n\t\tctx.fillText(\n\t\t\tthis.variableName, \n\t\t\tthis.boundingBox.x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w/2,\n\t\t\tthis.boundingBox.y + this.boundingBox.h/2\n\t\t);\n\t\tctx.fillText(\n\t\t\t'to', \n\t\t\tthis.boundingBox.x + RAMP_WIDTH + SET_VARIABLE_SET_WIDTH + this._variableNameBoundingBox.w +\n\t\t\t\tSET_VARIABLE_TO_WIDTH/2,\n\t\t\tthis.boundingBox.y + this.boundingBox.h/2\n\t\t);\n\t}\n\n\tgetReturnType(): DataType {\n\t\treturn 'VOID';\n\t}\n\n\ttryToPlace(v: Vec, blockToPlace: CasusBlock, ctx: ?CanvasRenderingContext2D): ?CasusBlock {\n\t\tif (!this.boundingBox.contains(v)) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.expressionBlock = this.expressionBlock.tryToPlace(v, blockToPlace, ctx) ?? this.expressionBlock;\n\t\treturn null;\n\t}\n\n}\n\nexport default SetVariableBlock;\n"]},"metadata":{},"sourceType":"module"}