{"ast":null,"code":"import BoundingBox from './BoundingBox.js';\nimport Vec from './Vec.js';\nimport { HIGHLIGHT_STROKE_WIDTH, BOARDER_STROKE_WIDTH } from './generateCornerPerim.js';\n\n//Casus Block is the parent class that defines\n//methods that will be called on blocks by the casus editor\n//\n//The following methods must be implemented:\n//\tprecompBounds() - calls precompBounds on all child blocks of this,\n//\t\tthen calculates this block's bounds\n//\n//\tprecompXY(x, y) - sets the x and y coordintates of this block now that\n//\t\tits bounds are known, and sets the absolute coordinates of all child blocks\n//\n//\tgetChildBlocks() - returns all child blocks of this block\n//\n//\tremoveBlockAt(v, removeAfter) - removes and returns the deepest block that contains\n//\t\tthe defined position. If there is no block at the position, returns an empty array.\n//\n//\tdrawSelf(CanvasRenderingContext2D) - renders this block. All children of this\n//\t\tblock will then be rendered on top of this\n//\n//\tgetReturnType() - gets the return type of the block\n//\n//\t(maybe):\n//\tgetPerim() - returns an array of the perimeter of this block\n//\n//\t(maybe):\n//\ttryToPlace(v, blockToPlace, ctx) - consider placing blockToPlace at\n//\t\twhen it is realeased at v. Ignore call if v outside of boundingBox.\n//\t\tReturn null if no change was made, or the block that replaces an empty\n//\t\tblock if a change is made.\n//\t\t- If ctx is null, actually place it;\n//\t\t-\tIf ctx is nonnull, just draw highlights of it. \n//\t\t- For everything other than EmptyBlock and ContainerBlock, this just needs to call\n//\t\ta dfs and maintain the set variables for all forms of children.\n//\nclass CasusBlock {\n  constructor() {\n    this.boundingBox = new BoundingBox(0, 0, 0, 0);\n    this.highlighted = false;\n  }\n\n  renderDFS(ctx) {\n    this.drawSelf(ctx);\n\n    for (const child of this.getChildBlocks()) {\n      child.renderDFS(ctx);\n    } //draw outline\n\n\n    const perim = this.getPerim();\n\n    if (perim.length !== 0 && !this.highlighted) {\n      ctx.beginPath();\n      ctx.strokeStyle = '#444444';\n      ctx.lineWidth = BOARDER_STROKE_WIDTH;\n      ctx.moveTo(perim[0].x, perim[0].y);\n\n      for (const p of perim) {\n        ctx.lineTo(p.x, p.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  highlightDFS(ctx) {\n    for (const child of this.getChildBlocks()) {\n      child.highlightDFS(ctx);\n    } //draw highlights\n\n\n    const perim = this.getPerim();\n\n    if (perim.length !== 0 && this.highlighted) {\n      ctx.beginPath();\n      ctx.strokeStyle = '#eeeeee';\n      ctx.lineWidth = HIGHLIGHT_STROKE_WIDTH;\n      ctx.moveTo(perim[0].x, perim[0].y);\n\n      for (const p of perim) {\n        ctx.lineTo(p.x, p.y);\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n\n  unhighlightEverything() {\n    this.highlighted = false;\n\n    for (const child of this.getChildBlocks()) {\n      child.unhighlightEverything();\n    }\n  }\n\n  getDeepestChildContainingPoint(v) {\n    for (const child of this.getChildBlocks()) {\n      if (child.boundingBox.contains(v)) {\n        return child.getDeepestChildContainingPoint(v);\n      }\n    }\n\n    return this.boundingBox.contains(v) ? this : null;\n  } //returns true if we were able to place it in some container, false otherwise\n\n\n  tryToPlaceInContainer(v, blockToPlace, ctx) {\n    if (!this.boundingBox.contains(v)) {\n      return false;\n    }\n\n    for (const child of this.getChildBlocks()) {\n      if (child.tryToPlaceInContainer(v, blockToPlace, ctx)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  draggable() {\n    return true;\n  } // ----------------------- Methods to overload --------------------------\n\n\n  precompBounds() {\n    this.boundingBox = new BoundingBox(0, 0, 0, 0);\n  }\n\n  precompXY(x, y) {\n    this.boundingBox = new BoundingBox(x, y, this.boundingBox.w, this.boundingBox.h);\n  }\n\n  getChildBlocks() {\n    return [];\n  }\n\n  removeBlockAt(v, removeAfter) {\n    return [];\n  }\n\n  drawSelf(ctx) {}\n\n  getPerim() {\n    return [new Vec(this.boundingBox.x, this.boundingBox.y), new Vec(this.boundingBox.x + this.boundingBox.w, this.boundingBox.y), new Vec(this.boundingBox.x + this.boundingBox.w, this.boundingBox.y + this.boundingBox.h), new Vec(this.boundingBox.x, this.boundingBox.y + this.boundingBox.h)];\n  }\n\n  getReturnType() {\n    return 'VOID';\n  }\n\n  tryToPlace(v, blockToPlace, ctx) {\n    return null;\n  }\n\n}\n\nexport default CasusBlock;","map":{"version":3,"sources":["/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blocks/CasusBlock.js"],"names":["BoundingBox","Vec","HIGHLIGHT_STROKE_WIDTH","BOARDER_STROKE_WIDTH","CasusBlock","constructor","boundingBox","highlighted","renderDFS","ctx","drawSelf","child","getChildBlocks","perim","getPerim","length","beginPath","strokeStyle","lineWidth","moveTo","x","y","p","lineTo","closePath","stroke","highlightDFS","unhighlightEverything","getDeepestChildContainingPoint","v","contains","tryToPlaceInContainer","blockToPlace","draggable","precompBounds","precompXY","w","h","removeBlockAt","removeAfter","getReturnType","tryToPlace"],"mappings":"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","sourcesContent":["//@flow strict\n\nimport BoundingBox from './BoundingBox.js';\nimport Vec from './Vec.js';\nimport {HIGHLIGHT_STROKE_WIDTH, BOARDER_STROKE_WIDTH} from './generateCornerPerim.js';\n\nimport type {DataType} from './DataType.js';\n\n//Casus Block is the parent class that defines\n//methods that will be called on blocks by the casus editor\n//\n//The following methods must be implemented:\n//\tprecompBounds() - calls precompBounds on all child blocks of this,\n//\t\tthen calculates this block's bounds\n//\n//\tprecompXY(x, y) - sets the x and y coordintates of this block now that\n//\t\tits bounds are known, and sets the absolute coordinates of all child blocks\n//\n//\tgetChildBlocks() - returns all child blocks of this block\n//\n//\tremoveBlockAt(v, removeAfter) - removes and returns the deepest block that contains\n//\t\tthe defined position. If there is no block at the position, returns an empty array.\n//\n//\tdrawSelf(CanvasRenderingContext2D) - renders this block. All children of this\n//\t\tblock will then be rendered on top of this\n//\n//\tgetReturnType() - gets the return type of the block\n//\n//\t(maybe):\n//\tgetPerim() - returns an array of the perimeter of this block\n//\n//\t(maybe):\n//\ttryToPlace(v, blockToPlace, ctx) - consider placing blockToPlace at\n//\t\twhen it is realeased at v. Ignore call if v outside of boundingBox.\n//\t\tReturn null if no change was made, or the block that replaces an empty\n//\t\tblock if a change is made.\n//\t\t- If ctx is null, actually place it;\n//\t\t-\tIf ctx is nonnull, just draw highlights of it. \n//\t\t- For everything other than EmptyBlock and ContainerBlock, this just needs to call\n//\t\ta dfs and maintain the set variables for all forms of children.\n//\n\nclass CasusBlock {\n\tboundingBox: BoundingBox;\n\thighlighted: boolean;\n\n\tconstructor() {\n\t\tthis.boundingBox = new BoundingBox(0, 0, 0, 0);\n\t\tthis.highlighted = false;\n\t}\n\n\trenderDFS(ctx: CanvasRenderingContext2D): void {\n\t\tthis.drawSelf(ctx);\n\t\tfor (const child of this.getChildBlocks()) {\n\t\t\tchild.renderDFS(ctx);\n\t\t}\n\t\t//draw outline\n\t\tconst perim=this.getPerim();\n\t\tif (perim.length !== 0 && !this.highlighted) {\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = '#444444';\n\t\t\tctx.lineWidth = BOARDER_STROKE_WIDTH;\n\t\t\tctx.moveTo(perim[0].x, perim[0].y);\n\t\t\tfor (const p: Vec of perim) {\n\t\t\t\tctx.lineTo(p.x, p.y);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\thighlightDFS(ctx: CanvasRenderingContext2D): void {\n\t\tfor (const child of this.getChildBlocks()) {\n\t\t\tchild.highlightDFS(ctx);\n\t\t}\n\t\t//draw highlights\n\t\tconst perim=this.getPerim();\n\t\tif (perim.length !== 0 && this.highlighted) {\n\t\t\tctx.beginPath();\n\t\t\tctx.strokeStyle = '#eeeeee';\n\t\t\tctx.lineWidth = HIGHLIGHT_STROKE_WIDTH;\n\t\t\tctx.moveTo(perim[0].x, perim[0].y);\n\t\t\tfor (const p: Vec of perim) {\n\t\t\t\tctx.lineTo(p.x, p.y);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tunhighlightEverything(): void {\n\t\tthis.highlighted=false;\n\t\tfor (const child of this.getChildBlocks()) {\n\t\t\tchild.unhighlightEverything();\n\t\t}\n\t}\n\n\tgetDeepestChildContainingPoint(v: Vec): ?CasusBlock {\n\t\tfor (const child of this.getChildBlocks()) {\n\t\t\tif (child.boundingBox.contains(v)) {\n\t\t\t\treturn child.getDeepestChildContainingPoint(v);\n\t\t\t}\n\t\t}\n\t\treturn this.boundingBox.contains(v) ? this : null;\n\t}\n\n\t//returns true if we were able to place it in some container, false otherwise\n\ttryToPlaceInContainer(v: Vec, blockToPlace: CasusBlock, ctx: ?CanvasRenderingContext2D): boolean {\n\t\tif (!this.boundingBox.contains(v)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (const child of this.getChildBlocks()) {\n\t\t\tif (child.tryToPlaceInContainer(v, blockToPlace, ctx)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tdraggable(): boolean {\n\t\treturn true;\n\t}\n\n\t// ----------------------- Methods to overload --------------------------\n\tprecompBounds(): void {\n\t\tthis.boundingBox=new BoundingBox(0, 0, 0, 0);\n\t}\n\n\tprecompXY(x: number, y:number): void {\n\t\tthis.boundingBox=new BoundingBox(x, y, this.boundingBox.w, this.boundingBox.h);\n\t}\n\n\tgetChildBlocks(): Array<CasusBlock> {\n\t\treturn [];\n\t}\n\n\tremoveBlockAt(v: Vec, removeAfter: boolean): Array<CasusBlock> {\n\t\treturn [];\n\t}\n\n\tdrawSelf(ctx: CanvasRenderingContext2D): void {\n\t}\n\n\tgetPerim(): Array<Vec> {\n\t\treturn [\n\t\t\tnew Vec(this.boundingBox.x, this.boundingBox.y),\n\t\t\tnew Vec(this.boundingBox.x + this.boundingBox.w, this.boundingBox.y),\n\t\t\tnew Vec(this.boundingBox.x + this.boundingBox.w, this.boundingBox.y + this.boundingBox.h),\n\t\t\tnew Vec(this.boundingBox.x, this.boundingBox.y + this.boundingBox.h)\n\t\t];\n\t}\n\n\tgetReturnType(): DataType {\n\t\treturn 'VOID';\n\t}\n\n\ttryToPlace(v: Vec, blockToPlace: CasusBlock, ctx: ?CanvasRenderingContext2D): ?CasusBlock {\n\t\treturn null;\n\t}\n\n}\n\nexport default CasusBlock;\n\n"]},"metadata":{},"sourceType":"module"}