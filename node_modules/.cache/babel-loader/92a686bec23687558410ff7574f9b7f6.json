{"ast":null,"code":"import BoundingBox from './BoundingBox.js';\nimport CasusBlock from './CasusBlock.js';\nimport EmptyBlock from './EmptyBlock.js';\nimport ContainerBlock from './ContainerBlock.js';\nimport Vec from './Vec.js';\nimport { RAMP_WIDTH, VPADDING } from './generateCornerPerim.js';\n\nclass SingleConditionHeader extends CasusBlock {\n  constructor(textWidth, text) {\n    super();\n    this.conditionBlock = new EmptyBlock('BOOLEAN');\n    this.contents = new ContainerBlock();\n    this.textWidth = textWidth;\n    this.text = text;\n  }\n\n  precompBounds() {\n    this.conditionBlock.precompBounds();\n    let width = this.textWidth + this.conditionBlock.boundingBox.w + RAMP_WIDTH;\n    let height = VPADDING + this.conditionBlock.boundingBox.h + VPADDING;\n    this.contents.precompBounds();\n    width = Math.max(width, this.contents.boundingBox.w + RAMP_WIDTH);\n    this.headerBoundingBox = new BoundingBox(0, 0, width, height);\n    height += this.contents.boundingBox.h;\n    height += RAMP_WIDTH;\n    this.boundingBox = new BoundingBox(0, 0, width, height);\n  }\n\n  getPerim() {\n    const toReturn = [];\n    const header = this.headerBoundingBox;\n    const bounding = this.boundingBox;\n    toReturn.push(new Vec(header.x, header.y));\n    toReturn.push(new Vec(header.x + header.w, header.y));\n    toReturn.push(new Vec(header.x + header.w, header.y + header.h));\n    toReturn.push(new Vec(header.x + RAMP_WIDTH, header.y + header.h));\n    toReturn.push(new Vec(header.x + RAMP_WIDTH, bounding.y + bounding.h - RAMP_WIDTH));\n    toReturn.push(new Vec(bounding.x + bounding.w, bounding.y + bounding.h - RAMP_WIDTH));\n    toReturn.push(new Vec(bounding.x + bounding.w, bounding.y + bounding.h));\n    toReturn.push(new Vec(bounding.x, bounding.y + bounding.h));\n    return toReturn;\n  }\n\n  precompXY(x, y) {\n    this.headerBoundingBox.x = x;\n    this.headerBoundingBox.y = y;\n    this.boundingBox.x = x;\n    this.boundingBox.y = y;\n    let curX = x + this.textWidth;\n    let curY = y + VPADDING;\n    this.conditionBlock.precompXY(curX, curY);\n    curX = x + RAMP_WIDTH;\n    curY = y + this.headerBoundingBox.h;\n    this.contents.precompXY(curX, curY);\n    curY += this.contents.boundingBox.h;\n  }\n\n  getChildBlocks() {\n    return [this.conditionBlock, this.contents];\n  }\n\n  removeBlockAt(v, removeAfter) {\n    const conditionRes = this.conditionBlock.removeBlockAt(v, removeAfter);\n\n    if (conditionRes.length > 0) {\n      return conditionRes;\n    }\n\n    if (this.conditionBlock.boundingBox.contains(v) && this.conditionBlock.draggable()) {\n      const toReturn = [this.conditionBlock];\n      this.conditionBlock = new EmptyBlock('BOOLEAN');\n      return toReturn;\n    }\n\n    return this.contents.removeBlockAt(v, removeAfter);\n  }\n\n  drawSelf(ctx) {\n    ctx.fillStyle = '#3322ee';\n    const perim = this.getPerim();\n    ctx.beginPath();\n    ctx.moveTo(perim[0].x, perim[0].y);\n\n    for (const p of perim) {\n      ctx.lineTo(p.x, p.y);\n    }\n\n    ctx.fill();\n    ctx.fillStyle = '#000000';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    let curX = this.boundingBox.x;\n    ctx.fillText(this.text, curX + this.textWidth / 2, this.headerBoundingBox.y + this.headerBoundingBox.h / 2);\n  }\n\n  getReturnType() {\n    return 'VOID';\n  }\n\n  tryToPlace(v, blockToPlace, ctx) {\n    var _this$conditionBlock$;\n\n    if (!this.boundingBox.contains(v)) {\n      return null;\n    }\n\n    this.conditionBlock = (_this$conditionBlock$ = this.conditionBlock.tryToPlace(v, blockToPlace, ctx)) !== null && _this$conditionBlock$ !== void 0 ? _this$conditionBlock$ : this.conditionBlock;\n    const result = this.contents.tryToPlace(v, blockToPlace, ctx);\n\n    if (result != null) {\n      console.log('ERROR! placing block in contents returned non-null meaning it got replaced!');\n    }\n\n    return null;\n  }\n\n}\n\nexport default SingleConditionHeader;","map":{"version":3,"sources":["/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blocks/SingleConditionHeader.js"],"names":["BoundingBox","CasusBlock","EmptyBlock","ContainerBlock","Vec","RAMP_WIDTH","VPADDING","SingleConditionHeader","constructor","textWidth","text","conditionBlock","contents","precompBounds","width","boundingBox","w","height","h","Math","max","headerBoundingBox","getPerim","toReturn","header","bounding","push","x","y","precompXY","curX","curY","getChildBlocks","removeBlockAt","v","removeAfter","conditionRes","length","contains","draggable","drawSelf","ctx","fillStyle","perim","beginPath","moveTo","p","lineTo","fill","font","textAlign","textBaseline","fillText","getReturnType","tryToPlace","blockToPlace","result","console","log"],"mappings":"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","sourcesContent":["//@flow strict\n\nimport BoundingBox from './BoundingBox.js';\nimport CasusBlock from './CasusBlock.js';\nimport EmptyBlock from './EmptyBlock.js';\nimport ContainerBlock from './ContainerBlock.js';\nimport Vec from './Vec.js';\n\nimport type {DataType} from './DataType.js';\n\nimport {\n\tRAMP_WIDTH, \n\tVPADDING\n} from './generateCornerPerim.js';\n\nclass SingleConditionHeader extends CasusBlock {\n\n\tconditionBlock: CasusBlock;\n\tcontents: ContainerBlock;\n\theaderBoundingBox: BoundingBox;\n\ttextWidth: number;\n\ttext: string;\n\n\tconstructor(textWidth: number, text: string) {\n\t\tsuper();\n\t\tthis.conditionBlock = new EmptyBlock('BOOLEAN');\n\t\tthis.contents = new ContainerBlock();\n\n\t\tthis.textWidth = textWidth;\n\t\tthis.text = text;\n\t}\n\n\tprecompBounds(): void {\n\t\tthis.conditionBlock.precompBounds();\n\n\t\tlet width = this.textWidth + \n\t\t\tthis.conditionBlock.boundingBox.w + RAMP_WIDTH;\n\t\tlet height = VPADDING + this.conditionBlock.boundingBox.h + VPADDING;\n\n\n\t\tthis.contents.precompBounds();\n\t\twidth = Math.max(width, this.contents.boundingBox.w + RAMP_WIDTH);\n\t\tthis.headerBoundingBox = new BoundingBox(0, 0, width, height);\t\n\n\t\theight+=this.contents.boundingBox.h;\n\t\theight+=RAMP_WIDTH;\n\n\t\tthis.boundingBox = new BoundingBox(0, 0, width, height);\n\t}\n\n\tgetPerim(): Array<Vec> {\n\t\tconst toReturn: Array<Vec> = [];\n\t\tconst header=this.headerBoundingBox;\n\t\tconst bounding=this.boundingBox;\n\n\t\ttoReturn.push(new Vec(header.x, header.y));\n\t\ttoReturn.push(new Vec(header.x+header.w, header.y));\n\t\ttoReturn.push(new Vec(header.x+header.w, header.y+header.h));\n\t\ttoReturn.push(new Vec(header.x+RAMP_WIDTH, header.y+header.h));\n\t\ttoReturn.push(new Vec(header.x+RAMP_WIDTH, bounding.y+bounding.h-RAMP_WIDTH));\n\t\ttoReturn.push(new Vec(bounding.x+bounding.w, bounding.y+bounding.h-RAMP_WIDTH));\n\t\ttoReturn.push(new Vec(bounding.x+bounding.w, bounding.y+bounding.h));\n\t\ttoReturn.push(new Vec(bounding.x, bounding.y+bounding.h));\n\n\t\treturn toReturn;\n\t}\n\n\tprecompXY(x: number, y:number): void {\n\t\tthis.headerBoundingBox.x=x;\n\t\tthis.headerBoundingBox.y=y;\n\t\tthis.boundingBox.x=x;\n\t\tthis.boundingBox.y=y;\n\n\t\tlet curX = x + this.textWidth;\n\t\tlet curY = y + VPADDING;\n\n\t\tthis.conditionBlock.precompXY(curX, curY);\n\n\t\tcurX = x + RAMP_WIDTH;\n\t\tcurY = y + this.headerBoundingBox.h;\n\t\tthis.contents.precompXY(curX, curY);\n\t\tcurY+=this.contents.boundingBox.h;\n\t}\n\n\tgetChildBlocks(): Array<CasusBlock> {\n\t\treturn [this.conditionBlock, this.contents];\n\t}\n\n\tremoveBlockAt(v: Vec, removeAfter: boolean): Array<CasusBlock> {\n\t\tconst conditionRes = this.conditionBlock.removeBlockAt(v, removeAfter);\n\t\tif (conditionRes.length > 0) {\n\t\t\treturn conditionRes;\n\t\t}\n\t\tif (this.conditionBlock.boundingBox.contains(v) && this.conditionBlock.draggable()) {\n\t\t\tconst toReturn = [this.conditionBlock];\n\t\t\tthis.conditionBlock = new EmptyBlock('BOOLEAN');\n\t\t\treturn toReturn;\n\t\t}\n\n\t\treturn this.contents.removeBlockAt(v, removeAfter);\n\t}\n\n\tdrawSelf(ctx: CanvasRenderingContext2D): void {\n\t\tctx.fillStyle = '#3322ee';\n\n\t\tconst perim: Array<Vec> = this.getPerim();\n\t\tctx.beginPath();\n\t\tctx.moveTo(perim[0].x, perim[0].y);\n\t\tfor (const p of perim) {\n\t\t\tctx.lineTo(p.x, p.y);\n\t\t}\n\t\tctx.fill();\n\n\t\tctx.fillStyle = '#000000';\n\t\tctx.font = '16px Arial';\n\t\tctx.textAlign = 'center';\n\t\tctx.textBaseline = 'middle';\n\n\t\tlet curX = this.boundingBox.x;\n\t\tctx.fillText(\n\t\t\tthis.text, \n\t\t\tcurX + this.textWidth/2,\n\t\t\tthis.headerBoundingBox.y + this.headerBoundingBox.h/2\n\t\t);\n\t}\n\n\tgetReturnType(): DataType {\n\t\treturn 'VOID';\n\t}\n\n\ttryToPlace(v: Vec, blockToPlace: CasusBlock, ctx: ?CanvasRenderingContext2D): ?CasusBlock {\n\t\tif (!this.boundingBox.contains(v)) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.conditionBlock = this.conditionBlock.tryToPlace(v, blockToPlace, ctx) \n\t\t\t?? this.conditionBlock;\n\t\tconst result = this.contents.tryToPlace(v, blockToPlace, ctx);\n\t\tif (result != null) {\n\t\t\tconsole.log('ERROR! placing block in contents returned non-null meaning it got replaced!');\n\t\t}\n\t\treturn null;\n\t}\n\n\n}\n\nexport default SingleConditionHeader;\n"]},"metadata":{},"sourceType":"module"}