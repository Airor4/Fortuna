{"ast":null,"code":"var _jsxFileName = \"/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blockBank/BlockBankBlockShelf.js\";\nimport * as React from 'react';\nimport ForBlock from '../blocks/ForBlock.js';\nimport IfBlock from '../blocks/IfBlock.js';\nimport WhileBlock from '../blocks/WhileBlock.js';\nimport IfElseBlock from '../blocks/IfElseBlock.js';\nimport CasusBlock from '../blocks/CasusBlock.js';\nimport AndBlock from '../blocks/AndBlock.js';\nimport OrBlock from '../blocks/OrBlock.js';\nimport XorBlock from '../blocks/XorBlock.js';\nimport IntEqualsBlock from '../blocks/IntEqualsBlock.js';\nimport IntGreaterThanBlock from '../blocks/IntGreaterThanBlock.js';\nimport IntGreaterThanOrEqualBlock from '../blocks/IntGreaterThanOrEqualBlock.js';\nimport IntLessThanBlock from '../blocks/IntLessThanBlock.js';\nimport IntLessThanOrEqualBlock from '../blocks/IntLessThanOrEqualBlock.js';\nimport IntAddBlock from '../blocks/IntAddBlock.js';\nimport IntSubtractBlock from '../blocks/IntSubtractBlock.js';\nimport IntMultiplyBlock from '../blocks/IntMultiplyBlock.js';\nimport IntDivideBlock from '../blocks/IntDivideBlock.js';\nimport IntModuloBlock from '../blocks/IntModuloBlock.js';\nimport IntToDoubleBlock from '../blocks/IntToDoubleBlock.js';\nimport IntAbsBlock from '../blocks/IntAbsBlock.js';\nimport IntMaxBlock from '../blocks/IntMaxBlock.js';\nimport IntMinBlock from '../blocks/IntMinBlock.js';\nimport DoubleEqualsBlock from '../blocks/DoubleEqualsBlock.js';\nimport DoubleGreaterThanBlock from '../blocks/DoubleGreaterThanBlock.js';\nimport DoubleGreaterThanOrEqualBlock from '../blocks/DoubleGreaterThanOrEqualBlock.js';\nimport DoubleLessThanBlock from '../blocks/DoubleLessThanBlock.js';\nimport DoubleLessThanOrEqualBlock from '../blocks/DoubleLessThanOrEqualBlock.js';\nimport DoubleAddBlock from '../blocks/DoubleAddBlock.js';\nimport DoubleSubtractBlock from '../blocks/DoubleSubtractBlock.js';\nimport DoubleMultiplyBlock from '../blocks/DoubleMultiplyBlock.js';\nimport DoubleDivideBlock from '../blocks/DoubleDivideBlock.js';\nimport DoubleRoundBlock from '../blocks/DoubleRoundBlock.js';\nimport DoubleTruncateBlock from '../blocks/DoubleTruncateBlock.js';\nimport DoubleAbsBlock from '../blocks/DoubleAbsBlock.js';\nimport DoubleMaxBlock from '../blocks/DoubleMaxBlock.js';\nimport DoubleMinBlock from '../blocks/DoubleMinBlock.js';\nimport MathCosBlock from '../blocks/MathCosBlock.js';\nimport MathSinBlock from '../blocks/MathSinBlock.js';\nimport MathTanBlock from '../blocks/MathTanBlock.js';\nimport MathAcosBlock from '../blocks/MathAcosBlock.js';\nimport MathAsinBlock from '../blocks/MathAsinBlock.js';\nimport MathAtanBlock from '../blocks/MathAtanBlock.js';\nimport MathSqrtBlock from '../blocks/MathSqrtBlock.js';\nimport MathPowBlock from '../blocks/MathPowBlock.js';\nimport ContainerBlock from '../blocks/ContainerBlock.js';\nimport Vec from '../blocks/Vec.js';\nimport './BlockBankBlockShelf.css';\nconst ADJACENT_BLOCK_PADDING = 10;\n\nclass BlockBankBlockShelf extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      blocksOnShelf: this._getBlocksOfType(props.selectedSection),\n      mouseX: 0,\n      mouseY: 0,\n      mouseOnScreen: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', () => this._rerender());\n    const canvas = this.refs.canvas;\n\n    canvas.onmousemove = e => this.onMouseMove(e);\n\n    canvas.onmouseout = () => this.onMouseOut();\n\n    canvas.onmouseup = () => this.onMouseUp();\n\n    canvas.onmousedown = e => this.onMouseDown(e);\n\n    canvas.oncontextmenu = e => {\n      e.preventDefault();\n    };\n\n    this._rerender();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    //Good practice to prevent infinite loop: \n    //https://reactjs.org/docs/react-component.html#componentdidupdate\n    if (this.props.selectedSection !== prevProps.selectedSection) {\n      this.setState({\n        blocksOnShelf: this._getBlocksOfType(this.props.selectedSection)\n      });\n    }\n\n    if (this.state !== prevState) {\n      this._rerender();\n    }\n  }\n\n  render() {\n    return React.createElement(\"canvas\", {\n      className: \"blockBankBlockShelfCanvas\",\n      ref: \"canvas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    });\n  }\n\n  onMouseMove(e) {\n    const canvas = this.refs.canvas;\n    const boundingBox = canvas.getBoundingClientRect();\n    this.setState({\n      mouseX: e.clientX - boundingBox.left,\n      mouseY: e.clientY - boundingBox.top,\n      mouseOnScreen: true\n    });\n\n    this._rerender();\n  }\n\n  onMouseOut() {\n    this.setState({\n      mouseOnScreen: false\n    });\n\n    this._rerender();\n  }\n\n  onMouseUp() {\n    this.props.onDraggedBlocksReleased();\n\n    this._rerender();\n  }\n\n  onMouseDown(e) {\n    const canvas = this.refs.canvas;\n    const boundingBox = canvas.getBoundingClientRect();\n    const eventPos = new Vec(e.clientX - boundingBox.left, e.clientY - boundingBox.top);\n\n    for (const block of this.state.blocksOnShelf) {\n      if (block.boundingBox.contains(eventPos)) {\n        //then this was clicked\n        this.props.onBlocksDragged([block]);\n        this.setState({\n          blocksOnShelf: this._getBlocksOfType(this.props.selectedSection)\n        });\n        break;\n      }\n    }\n\n    this._rerender();\n  }\n\n  _rerender() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext('2d');\n\n    this._resizeCanvas();\n\n    this._clearBackground(ctx);\n\n    this._renderBlocks(ctx, this.state.blocksOnShelf);\n\n    if (this.state.mouseOnScreen && this.props.draggedBlocks != null) {\n      const oldAlpha = ctx.globalAlpha;\n      ctx.globalAlpha = 0.5;\n      const containerBlock = new ContainerBlock(this.props.draggedBlocks);\n      containerBlock.precompBounds();\n      containerBlock.precompXY(this.state.mouseX, this.state.mouseY);\n      containerBlock.renderDFS(ctx);\n      ctx.globalAlpha = oldAlpha;\n    }\n  }\n\n  _clearBackground(ctx) {\n    //fill background\n    ctx.fillStyle = 'gray';\n    ctx.fillRect(0, 0, 100000, 10000);\n  }\n\n  _resizeCanvas() {\n    const canvas = this.refs.canvas;\n\n    if (canvas.width !== canvas.clientWidth || canvas.height !== canvas.clientHeight) {\n      canvas.width = canvas.clientWidth;\n      canvas.height = canvas.clientHeight;\n    }\n  }\n\n  _getBlocksOfType(type) {\n    let blocks = [];\n\n    switch (type) {\n      case 'CONTROL_FLOW':\n        blocks = this._getControlFlowBlocks();\n        break;\n\n      case 'MATH':\n        blocks = this._getMathBlocks();\n        break;\n\n      case 'INTS':\n        blocks = this._getIntsBlocks();\n        break;\n\n      case 'DOUBLES':\n        blocks = this._getDoublesBlocks();\n        break;\n\n      case 'VARIABLES':\n        blocks = [];\n        break;\n\n      case 'LOGIC':\n        blocks = this._getLogicBlocks();\n        break;\n\n      case 'LISTS':\n        blocks = [];\n        break;\n\n      default:\n        console.log('unexpected BlockBankType: ' + type + ' in getBlocksOfType!');\n        break;\n    }\n\n    let x = 10;\n    let y = 10;\n    let nextY = y;\n\n    for (const block of blocks) {\n      if (x > 940) {\n        x = 10;\n        y = nextY + 10;\n      }\n\n      block.precompBounds();\n      nextY = Math.max(nextY, y + block.boundingBox.h);\n      block.precompXY(x, y);\n      x += block.boundingBox.w + ADJACENT_BLOCK_PADDING;\n    }\n\n    return blocks;\n  }\n\n  _getControlFlowBlocks() {\n    const blocks = [];\n    blocks.push(new ForBlock());\n    blocks.push(new IfBlock());\n    blocks.push(new IfElseBlock());\n    blocks.push(new WhileBlock());\n    return blocks;\n  }\n\n  _getMathBlocks() {\n    const blocks = [];\n    blocks.push(new MathCosBlock());\n    blocks.push(new MathSinBlock());\n    blocks.push(new MathTanBlock());\n    blocks.push(new MathAcosBlock());\n    blocks.push(new MathAsinBlock());\n    blocks.push(new MathAtanBlock());\n    blocks.push(new MathSqrtBlock());\n    blocks.push(new MathPowBlock());\n    return blocks;\n  }\n\n  _getIntsBlocks() {\n    const blocks = [];\n    blocks.push(new IntEqualsBlock());\n    blocks.push(new IntGreaterThanBlock());\n    blocks.push(new IntGreaterThanOrEqualBlock());\n    blocks.push(new IntLessThanBlock());\n    blocks.push(new IntLessThanOrEqualBlock());\n    blocks.push(new IntAddBlock());\n    blocks.push(new IntSubtractBlock());\n    blocks.push(new IntMultiplyBlock());\n    blocks.push(new IntDivideBlock());\n    blocks.push(new IntModuloBlock());\n    blocks.push(new IntToDoubleBlock());\n    blocks.push(new IntAbsBlock());\n    blocks.push(new IntMaxBlock());\n    blocks.push(new IntMinBlock());\n    return blocks;\n  }\n\n  _getDoublesBlocks() {\n    const blocks = [];\n    blocks.push(new DoubleEqualsBlock());\n    blocks.push(new DoubleGreaterThanBlock());\n    blocks.push(new DoubleGreaterThanOrEqualBlock());\n    blocks.push(new DoubleLessThanBlock());\n    blocks.push(new DoubleLessThanOrEqualBlock());\n    blocks.push(new DoubleAddBlock());\n    blocks.push(new DoubleSubtractBlock());\n    blocks.push(new DoubleMultiplyBlock());\n    blocks.push(new DoubleDivideBlock());\n    blocks.push(new DoubleRoundBlock());\n    blocks.push(new DoubleTruncateBlock());\n    blocks.push(new DoubleAbsBlock());\n    blocks.push(new DoubleMaxBlock());\n    blocks.push(new DoubleMinBlock());\n    return blocks;\n  }\n\n  _getLogicBlocks() {\n    const blocks = [];\n    blocks.push(new AndBlock());\n    blocks.push(new OrBlock());\n    blocks.push(new XorBlock());\n    return blocks;\n  }\n\n  _renderBlocks(ctx, blocks) {\n    for (const block of blocks) {\n      block.renderDFS(ctx);\n    }\n  }\n\n}\n\nexport default BlockBankBlockShelf;","map":{"version":3,"sources":["/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blockBank/BlockBankBlockShelf.js"],"names":["React","ForBlock","IfBlock","WhileBlock","IfElseBlock","CasusBlock","AndBlock","OrBlock","XorBlock","IntEqualsBlock","IntGreaterThanBlock","IntGreaterThanOrEqualBlock","IntLessThanBlock","IntLessThanOrEqualBlock","IntAddBlock","IntSubtractBlock","IntMultiplyBlock","IntDivideBlock","IntModuloBlock","IntToDoubleBlock","IntAbsBlock","IntMaxBlock","IntMinBlock","DoubleEqualsBlock","DoubleGreaterThanBlock","DoubleGreaterThanOrEqualBlock","DoubleLessThanBlock","DoubleLessThanOrEqualBlock","DoubleAddBlock","DoubleSubtractBlock","DoubleMultiplyBlock","DoubleDivideBlock","DoubleRoundBlock","DoubleTruncateBlock","DoubleAbsBlock","DoubleMaxBlock","DoubleMinBlock","MathCosBlock","MathSinBlock","MathTanBlock","MathAcosBlock","MathAsinBlock","MathAtanBlock","MathSqrtBlock","MathPowBlock","ContainerBlock","Vec","ADJACENT_BLOCK_PADDING","BlockBankBlockShelf","Component","constructor","props","state","blocksOnShelf","_getBlocksOfType","selectedSection","mouseX","mouseY","mouseOnScreen","componentDidMount","window","addEventListener","_rerender","canvas","refs","onmousemove","e","onMouseMove","onmouseout","onMouseOut","onmouseup","onMouseUp","onmousedown","onMouseDown","oncontextmenu","preventDefault","componentDidUpdate","prevProps","prevState","setState","render","boundingBox","getBoundingClientRect","clientX","left","clientY","top","onDraggedBlocksReleased","eventPos","block","contains","onBlocksDragged","ctx","getContext","_resizeCanvas","_clearBackground","_renderBlocks","draggedBlocks","oldAlpha","globalAlpha","containerBlock","precompBounds","precompXY","renderDFS","fillStyle","fillRect","width","clientWidth","height","clientHeight","type","blocks","_getControlFlowBlocks","_getMathBlocks","_getIntsBlocks","_getDoublesBlocks","_getLogicBlocks","console","log","x","y","nextY","Math","max","h","w","push"],"mappings":"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","sourcesContent":["//@flow strict\n\nimport * as React from 'react';\nimport ForBlock from '../blocks/ForBlock.js';\nimport IfBlock from '../blocks/IfBlock.js';\nimport WhileBlock from '../blocks/WhileBlock.js';\nimport IfElseBlock from '../blocks/IfElseBlock.js';\nimport CasusBlock from '../blocks/CasusBlock.js';\nimport AndBlock from '../blocks/AndBlock.js';\nimport OrBlock from '../blocks/OrBlock.js';\nimport XorBlock from '../blocks/XorBlock.js';\n\nimport IntEqualsBlock from '../blocks/IntEqualsBlock.js';\nimport IntGreaterThanBlock from '../blocks/IntGreaterThanBlock.js';\nimport IntGreaterThanOrEqualBlock from '../blocks/IntGreaterThanOrEqualBlock.js';\nimport IntLessThanBlock from '../blocks/IntLessThanBlock.js';\nimport IntLessThanOrEqualBlock from '../blocks/IntLessThanOrEqualBlock.js';\nimport IntAddBlock from '../blocks/IntAddBlock.js';\nimport IntSubtractBlock from '../blocks/IntSubtractBlock.js';\nimport IntMultiplyBlock from '../blocks/IntMultiplyBlock.js';\nimport IntDivideBlock from '../blocks/IntDivideBlock.js';\nimport IntModuloBlock from '../blocks/IntModuloBlock.js';\nimport IntToDoubleBlock from '../blocks/IntToDoubleBlock.js';\nimport IntAbsBlock from '../blocks/IntAbsBlock.js';\nimport IntMaxBlock from '../blocks/IntMaxBlock.js';\nimport IntMinBlock from '../blocks/IntMinBlock.js';\n\nimport DoubleEqualsBlock from '../blocks/DoubleEqualsBlock.js';\nimport DoubleGreaterThanBlock from '../blocks/DoubleGreaterThanBlock.js';\nimport DoubleGreaterThanOrEqualBlock from '../blocks/DoubleGreaterThanOrEqualBlock.js';\nimport DoubleLessThanBlock from '../blocks/DoubleLessThanBlock.js';\nimport DoubleLessThanOrEqualBlock from '../blocks/DoubleLessThanOrEqualBlock.js';\nimport DoubleAddBlock from '../blocks/DoubleAddBlock.js';\nimport DoubleSubtractBlock from '../blocks/DoubleSubtractBlock.js';\nimport DoubleMultiplyBlock from '../blocks/DoubleMultiplyBlock.js';\nimport DoubleDivideBlock from '../blocks/DoubleDivideBlock.js';\nimport DoubleRoundBlock from '../blocks/DoubleRoundBlock.js';\nimport DoubleTruncateBlock from '../blocks/DoubleTruncateBlock.js';\nimport DoubleAbsBlock from '../blocks/DoubleAbsBlock.js';\nimport DoubleMaxBlock from '../blocks/DoubleMaxBlock.js';\nimport DoubleMinBlock from '../blocks/DoubleMinBlock.js';\n\nimport MathCosBlock from '../blocks/MathCosBlock.js';\nimport MathSinBlock from '../blocks/MathSinBlock.js';\nimport MathTanBlock from '../blocks/MathTanBlock.js';\nimport MathAcosBlock from '../blocks/MathAcosBlock.js';\nimport MathAsinBlock from '../blocks/MathAsinBlock.js';\nimport MathAtanBlock from '../blocks/MathAtanBlock.js';\nimport MathSqrtBlock from '../blocks/MathSqrtBlock.js';\nimport MathPowBlock from '../blocks/MathPowBlock.js';\n\nimport ContainerBlock from '../blocks/ContainerBlock.js';\nimport Vec from '../blocks/Vec.js';\nimport './BlockBankBlockShelf.css';\n\nimport type {BlockBankType} from './BlockBankType.js';\n\nconst ADJACENT_BLOCK_PADDING = 10;\n\ntype Props = {|\n\tdraggedBlocks: ?Array<CasusBlock>,\n\tonDraggedBlocksReleased: () => void,\n\tonBlocksDragged: (Array<CasusBlock>) => void,\n\tselectedSection: BlockBankType\n|};\n\ntype State = {|\n\tblocksOnShelf: Array<CasusBlock>,\n\tmouseX: number,\n\tmouseY: number,\n\tmouseOnScreen: boolean\n|};\n\ntype MouseEvent = {\n\tclientX: number;\n\tclientY: number;\n};\n\ntype CanPreventDefaultEvent = {\n\tpreventDefault: () => void;\n};\n\nclass BlockBankBlockShelf extends React.Component<Props, State> {\n\n\tconstructor(props: Props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tblocksOnShelf: this._getBlocksOfType(props.selectedSection),\n\t\t\tmouseX: 0,\n\t\t\tmouseY: 0,\n\t\t\tmouseOnScreen: false\n\t\t};\n\t}\n\n\tcomponentDidMount(): void {\n\t\twindow.addEventListener('resize', () => this._rerender());\t\n\t\tconst canvas: HTMLCanvasElement = this.refs.canvas;\n\t\tcanvas.onmousemove = (e: MouseEvent) => this.onMouseMove(e);\n\t\tcanvas.onmouseout = () => this.onMouseOut();\n\t\tcanvas.onmouseup = () => this.onMouseUp();\n\t\tcanvas.onmousedown = (e: MouseEvent) => this.onMouseDown(e);\n\t\tcanvas.oncontextmenu = (e: CanPreventDefaultEvent) => {e.preventDefault();}; \n\n\t\tthis._rerender();\n\t}\n\n\tcomponentDidUpdate(prevProps: Props, prevState: State): void {\n\t\t//Good practice to prevent infinite loop: \n\t\t//https://reactjs.org/docs/react-component.html#componentdidupdate\n\t\tif (this.props.selectedSection !== prevProps.selectedSection) {\n\t\t\tthis.setState({\n\t\t\t\tblocksOnShelf: this._getBlocksOfType(this.props.selectedSection),\n\t\t\t});\n\t\t}\n\t\tif (this.state !== prevState) {\n\t\t\tthis._rerender();\n\t\t}\n\t}\n\n\trender(): React.Node {\n\t\treturn (\n\t\t\t<canvas\n\t\t\t\tclassName=\"blockBankBlockShelfCanvas\"\n\t\t\t\tref=\"canvas\"\n\t\t\t/>\n\t\t);\n\t}\n\n\tonMouseMove(e: MouseEvent): void {\n\t\tconst canvas: HTMLCanvasElement = this.refs.canvas;\n\t\tconst boundingBox: ClientRect = canvas.getBoundingClientRect();\n\t\tthis.setState({\n\t\t\tmouseX: e.clientX - boundingBox.left,\n\t\t\tmouseY: e.clientY - boundingBox.top,\n\t\t\tmouseOnScreen: true\n\t\t});\n\n\t\tthis._rerender();\n\t}\n\n\tonMouseOut(): void {\n\t\tthis.setState({mouseOnScreen: false});\n\t\tthis._rerender();\n\t}\n\n\tonMouseUp(): void {\n\t\tthis.props.onDraggedBlocksReleased();\n\t\tthis._rerender();\n\t}\n\n\tonMouseDown(e: MouseEvent): void {\n\t\tconst canvas: HTMLCanvasElement = this.refs.canvas;\n\t\tconst boundingBox: ClientRect = canvas.getBoundingClientRect();\n\n\t\tconst eventPos=new Vec(e.clientX - boundingBox.left, e.clientY - boundingBox.top);\n\t\tfor (const block: CasusBlock of this.state.blocksOnShelf) {\n\t\t\tif (block.boundingBox.contains(eventPos)) {\n\t\t\t\t//then this was clicked\n\t\t\t\tthis.props.onBlocksDragged([block]);\n\t\t\t\tthis.setState({\n\t\t\t\t\tblocksOnShelf: this._getBlocksOfType(this.props.selectedSection)\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tthis._rerender();\n\t}\n\n\t_rerender(): void {\n\t\tconst canvas: HTMLCanvasElement = this.refs.canvas;\n\t\tconst ctx: CanvasRenderingContext2D = canvas.getContext('2d');\n\n\t\tthis._resizeCanvas();\n\t\tthis._clearBackground(ctx);\n\t\tthis._renderBlocks(ctx, this.state.blocksOnShelf);\n\n\t\tif (this.state.mouseOnScreen && this.props.draggedBlocks != null) {\n\t\t\tconst oldAlpha=ctx.globalAlpha;\n\t\t\tctx.globalAlpha=0.5;\n\n\t\t\tconst containerBlock=new ContainerBlock(this.props.draggedBlocks);\n\t\t\tcontainerBlock.precompBounds();\n\t\t\tcontainerBlock.precompXY(this.state.mouseX, this.state.mouseY);\n\t\t\tcontainerBlock.renderDFS(ctx);\n\n\t\t\tctx.globalAlpha=oldAlpha;\n\t\t}\n\t}\n\n\t_clearBackground(ctx: CanvasRenderingContext2D): void {\n\t\t//fill background\n\t\tctx.fillStyle = 'gray';\n\t\tctx.fillRect(0, 0, 100000, 10000);\n\t}\n\n\t_resizeCanvas(): void {\n\t\tconst canvas: HTMLCanvasElement = this.refs.canvas;\n\t\tif (canvas.width !== canvas.clientWidth || canvas.height !==canvas.clientHeight) {\n\t\t\tcanvas.width=canvas.clientWidth;\n\t\t\tcanvas.height=canvas.clientHeight;\n\t\t}\n\t}\n\n\t_getBlocksOfType(type: BlockBankType): Array<CasusBlock> {\n\t\tlet blocks=[];\n\t\tswitch(type) {\n\t\t\tcase 'CONTROL_FLOW':\n\t\t\t\tblocks = this._getControlFlowBlocks();\n\t\t\t\tbreak;\n\t\t\tcase 'MATH':\n\t\t\t\tblocks = this._getMathBlocks();\n\t\t\t\tbreak;\n\t\t\tcase 'INTS':\n\t\t\t\tblocks = this._getIntsBlocks();\n\t\t\t\tbreak;\n\t\t\tcase 'DOUBLES':\n\t\t\t\tblocks = this._getDoublesBlocks();\n\t\t\t\tbreak;\n\t\t\tcase 'VARIABLES':\n\t\t\t\tblocks = [];\n\t\t\t\tbreak;\n\t\t\tcase 'LOGIC':\n\t\t\t\tblocks = this._getLogicBlocks();\n\t\t\t\tbreak;\n\t\t\tcase 'LISTS':\n\t\t\t\tblocks = [];\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log('unexpected BlockBankType: '+type+' in getBlocksOfType!');\n\t\t\t\tbreak;\n\t\t}\n\n\t\tlet x=10;\n\t\tlet y=10;\n\t\tlet nextY=y;\n\t\tfor (const block: CasusBlock of blocks) {\n\t\t\tif (x>940) {\n\t\t\t\tx=10;\n\t\t\t\ty=nextY+10;\n\t\t\t}\n\t\t\tblock.precompBounds();\n\t\t\tnextY=Math.max(nextY, y+block.boundingBox.h);\n\t\t\tblock.precompXY(x, y);\n\t\t\tx += block.boundingBox.w + ADJACENT_BLOCK_PADDING;\n\t\t}\n\n\t\treturn blocks;\n\t}\n\n\t_getControlFlowBlocks(): Array<CasusBlock> {\n\t\tconst blocks: Array<CasusBlock> = [];\n\t\tblocks.push(new ForBlock());\n\t\tblocks.push(new IfBlock());\n\t\tblocks.push(new IfElseBlock());\n\t\tblocks.push(new WhileBlock());\n\t\treturn blocks;\n\t}\n\n\t_getMathBlocks(): Array<CasusBlock> {\n\t\tconst blocks: Array<CasusBlock> = [];\n\t\tblocks.push(new MathCosBlock());\n\t\tblocks.push(new MathSinBlock());\n\t\tblocks.push(new MathTanBlock());\n\t\tblocks.push(new MathAcosBlock());\n\t\tblocks.push(new MathAsinBlock());\n\t\tblocks.push(new MathAtanBlock());\n\t\tblocks.push(new MathSqrtBlock());\n\t\tblocks.push(new MathPowBlock());\n\t\treturn blocks;\n\t}\n\n\t_getIntsBlocks(): Array<CasusBlock> {\n\t\tconst blocks: Array<CasusBlock> = [];\n\t\tblocks.push(new IntEqualsBlock());\n\t\tblocks.push(new IntGreaterThanBlock());\n\t\tblocks.push(new IntGreaterThanOrEqualBlock());\n\t\tblocks.push(new IntLessThanBlock());\n\t\tblocks.push(new IntLessThanOrEqualBlock());\n\t\tblocks.push(new IntAddBlock());\n\t\tblocks.push(new IntSubtractBlock());\n\t\tblocks.push(new IntMultiplyBlock());\n\t\tblocks.push(new IntDivideBlock());\n\t\tblocks.push(new IntModuloBlock());\n\t\tblocks.push(new IntToDoubleBlock());\n\t\tblocks.push(new IntAbsBlock());\n\t\tblocks.push(new IntMaxBlock());\n\t\tblocks.push(new IntMinBlock());\n\t\treturn blocks;\n\t}\n\n\t_getDoublesBlocks(): Array<CasusBlock> {\n\t\tconst blocks: Array<CasusBlock> = [];\n\t\tblocks.push(new DoubleEqualsBlock());\n\t\tblocks.push(new DoubleGreaterThanBlock());\n\t\tblocks.push(new DoubleGreaterThanOrEqualBlock());\n\t\tblocks.push(new DoubleLessThanBlock());\n\t\tblocks.push(new DoubleLessThanOrEqualBlock());\n\t\tblocks.push(new DoubleAddBlock());\n\t\tblocks.push(new DoubleSubtractBlock());\n\t\tblocks.push(new DoubleMultiplyBlock());\n\t\tblocks.push(new DoubleDivideBlock());\n\t\tblocks.push(new DoubleRoundBlock());\n\t\tblocks.push(new DoubleTruncateBlock());\n\t\tblocks.push(new DoubleAbsBlock());\n\t\tblocks.push(new DoubleMaxBlock());\n\t\tblocks.push(new DoubleMinBlock());\n\t\treturn blocks;\n\t}\n\n\t_getLogicBlocks(): Array<CasusBlock> {\n\t\tconst blocks: Array<CasusBlock> = [];\n\t\tblocks.push(new AndBlock());\n\t\tblocks.push(new OrBlock());\n\t\tblocks.push(new XorBlock());\n\t\treturn blocks;\n\t}\n\n\t_renderBlocks(ctx: CanvasRenderingContext2D, blocks: Array<CasusBlock>) {\n\t\tfor (const block: CasusBlock of blocks) {\n\t\t\tblock.renderDFS(ctx);\n\t\t}\n\t}\n\n}\n\nexport default BlockBankBlockShelf;\n"]},"metadata":{},"sourceType":"module"}