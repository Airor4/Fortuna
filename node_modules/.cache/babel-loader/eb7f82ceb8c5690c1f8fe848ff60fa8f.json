{"ast":null,"code":"import CasusBlock from './CasusBlock.js';\nimport BoundingBox from './BoundingBox.js';\nimport Vec from './Vec.js';\nimport { RAMP_WIDTH, EMPTY_STATEMENT_WIDTH, EMPTY_STATEMENT_HEIGHT } from './generateCornerPerim.js';\nimport generateCornerPerim from './generateCornerPerim.js';\n\nclass EmptyBlock extends CasusBlock {\n  constructor(dataType) {\n    super();\n    this.dataType = dataType;\n  }\n\n  precompBounds() {\n    this.boundingBox = new BoundingBox(0, 0, RAMP_WIDTH + EMPTY_STATEMENT_WIDTH + RAMP_WIDTH, EMPTY_STATEMENT_HEIGHT);\n  }\n\n  precompXY(x, y) {\n    this.boundingBox = new BoundingBox(x, y, this.boundingBox.w, this.boundingBox.h);\n  }\n\n  getChildBlocks() {\n    return [];\n  }\n\n  draggable() {\n    return false;\n  }\n\n  getPerim() {\n    return generateCornerPerim(this.boundingBox, this.dataType);\n  }\n\n  drawSelf(ctx) {\n    ctx.fillStyle = '#222222';\n    ctx.beginPath();\n    const perim = this.getPerim();\n    ctx.moveTo(perim[0].x, perim[0].y);\n\n    for (const p of perim) {\n      ctx.lineTo(p.x, p.y);\n    }\n\n    ctx.fill();\n  }\n\n  getReturnType() {\n    return this.dataType;\n  }\n\n  tryToPlace(v, blockToPlace, ctx) {\n    if (!this.boundingBox.contains(v)) {\n      return null;\n    } //if the return types don't match, you can't place it here\n\n\n    if (this.getReturnType() !== blockToPlace.getReturnType()) {\n      return null;\n    }\n\n    if (ctx == null) {\n      //then actually place the block\n      return blockToPlace;\n    } else {\n      //just draw the highlights\n      this.highlighted = true;\n      return null;\n    }\n  }\n\n}\n\nexport default EmptyBlock;","map":{"version":3,"sources":["/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blocks/EmptyBlock.js"],"names":["CasusBlock","BoundingBox","Vec","RAMP_WIDTH","EMPTY_STATEMENT_WIDTH","EMPTY_STATEMENT_HEIGHT","generateCornerPerim","EmptyBlock","constructor","dataType","precompBounds","boundingBox","precompXY","x","y","w","h","getChildBlocks","draggable","getPerim","drawSelf","ctx","fillStyle","beginPath","perim","moveTo","p","lineTo","fill","getReturnType","tryToPlace","v","blockToPlace","contains","highlighted"],"mappings":"AAEA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SACCC,UADD,EAECC,qBAFD,EAGCC,sBAHD,QAIO,0BAJP;AAKA,OAAOC,mBAAP,MAAgC,0BAAhC;;AAIA,MAAMC,UAAN,SAAyBP,UAAzB,CAAoC;AAInCQ,EAAAA,WAAW,CAACC,QAAD,EAAqB;AAC/B;AACA,SAAKA,QAAL,GAAcA,QAAd;AACA;;AAEDC,EAAAA,aAAa,GAAS;AACrB,SAAKC,WAAL,GAAiB,IAAIV,WAAJ,CAChB,CADgB,EAEhB,CAFgB,EAGhBE,UAAU,GAAGC,qBAAb,GAAqCD,UAHrB,EAIhBE,sBAJgB,CAAjB;AAMA;;AAEDO,EAAAA,SAAS,CAACC,CAAD,EAAYC,CAAZ,EAA4B;AACpC,SAAKH,WAAL,GAAiB,IAAIV,WAAJ,CAAgBY,CAAhB,EAAmBC,CAAnB,EAAsB,KAAKH,WAAL,CAAiBI,CAAvC,EAA0C,KAAKJ,WAAL,CAAiBK,CAA3D,CAAjB;AACA;;AAEDC,EAAAA,cAAc,GAAsB;AACnC,WAAO,EAAP;AACA;;AAEDC,EAAAA,SAAS,GAAY;AACpB,WAAO,KAAP;AACA;;AAEDC,EAAAA,QAAQ,GAAe;AACtB,WAAOb,mBAAmB,CAAC,KAAKK,WAAN,EAAmB,KAAKF,QAAxB,CAA1B;AACA;;AAEDW,EAAAA,QAAQ,CAACC,GAAD,EAAsC;AAC7CA,IAAAA,GAAG,CAACC,SAAJ,GAAgB,SAAhB;AACAD,IAAAA,GAAG,CAACE,SAAJ;AACA,UAAMC,KAAiB,GAAG,KAAKL,QAAL,EAA1B;AACAE,IAAAA,GAAG,CAACI,MAAJ,CAAWD,KAAK,CAAC,CAAD,CAAL,CAASX,CAApB,EAAuBW,KAAK,CAAC,CAAD,CAAL,CAASV,CAAhC;;AACA,SAAK,MAAMY,CAAX,IAAgBF,KAAhB,EAAuB;AACtBH,MAAAA,GAAG,CAACM,MAAJ,CAAWD,CAAC,CAACb,CAAb,EAAgBa,CAAC,CAACZ,CAAlB;AACA;;AACDO,IAAAA,GAAG,CAACO,IAAJ;AACA;;AAEDC,EAAAA,aAAa,GAAa;AACzB,WAAO,KAAKpB,QAAZ;AACA;;AAEDqB,EAAAA,UAAU,CAACC,CAAD,EAASC,YAAT,EAAmCX,GAAnC,EAAgF;AACzF,QAAI,CAAC,KAAKV,WAAL,CAAiBsB,QAAjB,CAA0BF,CAA1B,CAAL,EAAmC;AAClC,aAAO,IAAP;AACA,KAHwF,CAIzF;;;AACA,QAAI,KAAKF,aAAL,OAAyBG,YAAY,CAACH,aAAb,EAA7B,EAA2D;AAC1D,aAAO,IAAP;AACA;;AACD,QAAIR,GAAG,IAAI,IAAX,EAAiB;AAChB;AACA,aAAOW,YAAP;AACA,KAHD,MAIK;AACJ;AACA,WAAKE,WAAL,GAAiB,IAAjB;AACA,aAAO,IAAP;AACA;AACD;;AAlEkC;;AAsEpC,eAAe3B,UAAf","sourcesContent":["//@flow strict\n\nimport CasusBlock from './CasusBlock.js';\nimport BoundingBox from './BoundingBox.js';\nimport Vec from './Vec.js';\nimport {\n\tRAMP_WIDTH, \n\tEMPTY_STATEMENT_WIDTH, \n\tEMPTY_STATEMENT_HEIGHT,\n} from './generateCornerPerim.js';\nimport generateCornerPerim from './generateCornerPerim.js';\n\nimport type {DataType} from './DataType.js';\n\nclass EmptyBlock extends CasusBlock {\n\n\tdataType: DataType;\n\n\tconstructor(dataType: DataType) {\n\t\tsuper();\n\t\tthis.dataType=dataType;\n\t}\n\n\tprecompBounds(): void {\n\t\tthis.boundingBox=new BoundingBox(\n\t\t\t0, \n\t\t\t0,\n\t\t\tRAMP_WIDTH + EMPTY_STATEMENT_WIDTH + RAMP_WIDTH, \n\t\t\tEMPTY_STATEMENT_HEIGHT\n\t\t);\t\n\t}\n\n\tprecompXY(x: number, y:number): void {\n\t\tthis.boundingBox=new BoundingBox(x, y, this.boundingBox.w, this.boundingBox.h);\n\t}\n\n\tgetChildBlocks(): Array<CasusBlock> {\n\t\treturn [];\n\t}\n\n\tdraggable(): boolean {\n\t\treturn false;\n\t}\n\n\tgetPerim(): Array<Vec> {\n\t\treturn generateCornerPerim(this.boundingBox, this.dataType);\n\t}\n\n\tdrawSelf(ctx: CanvasRenderingContext2D): void {\n\t\tctx.fillStyle = '#222222';\n\t\tctx.beginPath();\n\t\tconst perim: Array<Vec> = this.getPerim();\n\t\tctx.moveTo(perim[0].x, perim[0].y);\n\t\tfor (const p of perim) {\n\t\t\tctx.lineTo(p.x, p.y);\n\t\t}\n\t\tctx.fill();\n\t}\n\n\tgetReturnType(): DataType {\n\t\treturn this.dataType;\n\t}\n\n\ttryToPlace(v: Vec, blockToPlace: CasusBlock, ctx: ?CanvasRenderingContext2D): ?CasusBlock {\n\t\tif (!this.boundingBox.contains(v)) {\n\t\t\treturn null;\n\t\t}\n\t\t//if the return types don't match, you can't place it here\n\t\tif (this.getReturnType() !== blockToPlace.getReturnType()) {\n\t\t\treturn null;\n\t\t}\n\t\tif (ctx == null) {\n\t\t\t//then actually place the block\n\t\t\treturn blockToPlace;\n\t\t}\n\t\telse {\n\t\t\t//just draw the highlights\n\t\t\tthis.highlighted=true;\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n\nexport default EmptyBlock;\n"]},"metadata":{},"sourceType":"module"}