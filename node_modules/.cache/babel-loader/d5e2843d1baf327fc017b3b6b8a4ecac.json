{"ast":null,"code":"import BoundingBox from './BoundingBox.js';\nimport CasusBlock from './CasusBlock.js';\nimport EmptyBlock from './EmptyBlock.js';\nimport ContainerBlock from './ContainerBlock.js';\nimport Vec from './Vec.js';\nimport { FOR_BLOCK_FOR_WIDTH, FOR_BLOCK_SEMICOLON_WIDTH, RAMP_WIDTH, VPADDING } from './generateCornerPerim.js';\n\nclass ForBlock extends CasusBlock {\n  constructor() {\n    super();\n    this.initializationBlock = new EmptyBlock('VOID');\n    this.expressionBlock = new EmptyBlock('BOOLEAN');\n    this.incrementBlock = new EmptyBlock('VOID');\n    this.contents = new ContainerBlock();\n  }\n\n  precompBounds() {\n    this.initializationBlock.precompBounds();\n    this.expressionBlock.precompBounds();\n    this.incrementBlock.precompBounds();\n    let width = FOR_BLOCK_FOR_WIDTH + this.initializationBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH + this.expressionBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH + this.incrementBlock.boundingBox.w + RAMP_WIDTH;\n    let height = VPADDING + Math.max(this.initializationBlock.boundingBox.h, Math.max(this.expressionBlock.boundingBox.h, this.incrementBlock.boundingBox.h)) + VPADDING;\n    this.contents.precompBounds();\n    width = Math.max(width, this.contents.boundingBox.w + RAMP_WIDTH);\n    this.headerBoundingBox = new BoundingBox(0, 0, width, height);\n    height += this.contents.boundingBox.h;\n    height += RAMP_WIDTH;\n    this.boundingBox = new BoundingBox(0, 0, width, height);\n  }\n\n  getPerim() {\n    const toReturn = [];\n    const header = this.headerBoundingBox;\n    const bounding = this.boundingBox;\n    toReturn.push(new Vec(header.x, header.y));\n    toReturn.push(new Vec(header.x + header.w, header.y));\n    toReturn.push(new Vec(header.x + header.w, header.y + header.h));\n    toReturn.push(new Vec(header.x + RAMP_WIDTH, header.y + header.h));\n    toReturn.push(new Vec(header.x + RAMP_WIDTH, bounding.y + bounding.h - RAMP_WIDTH));\n    toReturn.push(new Vec(bounding.x + bounding.w, bounding.y + bounding.h - RAMP_WIDTH));\n    toReturn.push(new Vec(bounding.x + bounding.w, bounding.y + bounding.h));\n    toReturn.push(new Vec(bounding.x, bounding.y + bounding.h));\n    return toReturn;\n  }\n\n  precompXY(x, y) {\n    this.headerBoundingBox.x = x;\n    this.headerBoundingBox.y = y;\n    this.boundingBox.x = x;\n    this.boundingBox.y = y;\n    let curX = x + FOR_BLOCK_FOR_WIDTH;\n    let curY = y;\n    let vSpace = this.headerBoundingBox.h - this.initializationBlock.boundingBox.h;\n    this.initializationBlock.precompXY(curX, curY + vSpace / 2);\n    curX += this.initializationBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH;\n    vSpace = this.headerBoundingBox.h - this.expressionBlock.boundingBox.h;\n    this.expressionBlock.precompXY(curX, curY + vSpace / 2);\n    curX += this.expressionBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH;\n    vSpace = this.headerBoundingBox.h - this.incrementBlock.boundingBox.h;\n    this.incrementBlock.precompXY(curX, curY + vSpace / 2);\n    curX = x + RAMP_WIDTH;\n    curY = y + this.headerBoundingBox.h;\n    this.contents.precompXY(curX, curY);\n    curY += this.contents.boundingBox.h;\n  }\n\n  getChildBlocks() {\n    return [this.initializationBlock, this.expressionBlock, this.incrementBlock, this.contents];\n  }\n\n  removeBlockAt(v, removeAfter) {\n    const initializationRes = this.initializationBlock.removeBlockAt(v, removeAfter);\n\n    if (initializationRes.length > 0) {\n      return initializationRes;\n    }\n\n    if (this.initializationBlock.boundingBox.contains(v) && this.initializationBlock.draggable()) {\n      const toReturn = [this.initializationBlock];\n      this.initializationBlock = new EmptyBlock('VOID');\n      return toReturn;\n    }\n\n    const expressionRes = this.expressionBlock.removeBlockAt(v, removeAfter);\n\n    if (expressionRes.length > 0) {\n      return expressionRes;\n    }\n\n    if (this.expressionBlock.boundingBox.contains(v) && this.expressionBlock.draggable()) {\n      const toReturn = [this.expressionBlock];\n      this.expressionBlock = new EmptyBlock('BOOLEAN');\n      return toReturn;\n    }\n\n    const incrementRes = this.incrementBlock.removeBlockAt(v, removeAfter);\n\n    if (incrementRes.length > 0) {\n      return incrementRes;\n    }\n\n    if (this.incrementBlock.boundingBox.contains(v) && this.incrementBlock.draggable()) {\n      const toReturn = [this.incrementBlock];\n      this.incrementBlock = new EmptyBlock('VOID');\n      return toReturn;\n    }\n\n    return this.contents.removeBlockAt(v, removeAfter);\n  }\n\n  drawSelf(ctx) {\n    ctx.fillStyle = '#3322ee';\n    const perim = this.getPerim();\n    ctx.beginPath();\n    ctx.moveTo(perim[0].x, perim[0].y);\n\n    for (const p of perim) {\n      ctx.lineTo(p.x, p.y);\n    }\n\n    ctx.fill();\n    ctx.fillStyle = '#000000';\n    ctx.font = '16px Arial';\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    let curX = this.boundingBox.x;\n    ctx.fillText('for', curX + FOR_BLOCK_FOR_WIDTH / 2, this.headerBoundingBox.y + this.headerBoundingBox.h / 2);\n    curX += FOR_BLOCK_FOR_WIDTH + this.initializationBlock.boundingBox.w;\n    ctx.fillText(';', curX + FOR_BLOCK_SEMICOLON_WIDTH / 2, this.boundingBox.y + this.headerBoundingBox.h / 2);\n    curX += FOR_BLOCK_SEMICOLON_WIDTH + this.expressionBlock.boundingBox.w;\n    ctx.fillText(';', curX + FOR_BLOCK_SEMICOLON_WIDTH / 2, this.boundingBox.y + this.headerBoundingBox.h / 2);\n  }\n\n  getReturnType() {\n    return 'VOID';\n  }\n\n  tryToPlace(v, blockToPlace, ctx) {\n    var _this$initializationB, _this$expressionBlock, _this$incrementBlock$;\n\n    if (!this.boundingBox.contains(v)) {\n      return null;\n    }\n\n    this.initializationBlock = (_this$initializationB = this.initializationBlock.tryToPlace(v, blockToPlace, ctx)) !== null && _this$initializationB !== void 0 ? _this$initializationB : this.initializationBlock;\n    this.expressionBlock = (_this$expressionBlock = this.expressionBlock.tryToPlace(v, blockToPlace, ctx)) !== null && _this$expressionBlock !== void 0 ? _this$expressionBlock : this.expressionBlock;\n    this.incrementBlock = (_this$incrementBlock$ = this.incrementBlock.tryToPlace(v, blockToPlace, ctx)) !== null && _this$incrementBlock$ !== void 0 ? _this$incrementBlock$ : this.incrementBlock;\n    const result = this.contents.tryToPlace(v, blockToPlace, ctx);\n\n    if (result != null) {\n      console.log('ERROR! placing block in for loop contents returned non-null meaning it got replaced!');\n    }\n\n    return null;\n  }\n\n}\n\nexport default ForBlock;","map":{"version":3,"sources":["/Users/Airor/Desktop/Fortuna/Fortuna/fortuna/src/casus/blocks/ForBlock.js"],"names":["BoundingBox","CasusBlock","EmptyBlock","ContainerBlock","Vec","FOR_BLOCK_FOR_WIDTH","FOR_BLOCK_SEMICOLON_WIDTH","RAMP_WIDTH","VPADDING","ForBlock","constructor","initializationBlock","expressionBlock","incrementBlock","contents","precompBounds","width","boundingBox","w","height","Math","max","h","headerBoundingBox","getPerim","toReturn","header","bounding","push","x","y","precompXY","curX","curY","vSpace","getChildBlocks","removeBlockAt","v","removeAfter","initializationRes","length","contains","draggable","expressionRes","incrementRes","drawSelf","ctx","fillStyle","perim","beginPath","moveTo","p","lineTo","fill","font","textAlign","textBaseline","fillText","getReturnType","tryToPlace","blockToPlace","result","console","log"],"mappings":"AAEA,OAAOA,WAAP,MAAwB,kBAAxB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,GAAP,MAAgB,UAAhB;AAIA,SACCC,mBADD,EAECC,yBAFD,EAGCC,UAHD,EAICC,QAJD,QAKO,0BALP;;AAOA,MAAMC,QAAN,SAAuBR,UAAvB,CAAkC;AAQjCS,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,mBAAL,GAA2B,IAAIT,UAAJ,CAAe,MAAf,CAA3B;AACA,SAAKU,eAAL,GAAuB,IAAIV,UAAJ,CAAe,SAAf,CAAvB;AACA,SAAKW,cAAL,GAAsB,IAAIX,UAAJ,CAAe,MAAf,CAAtB;AACA,SAAKY,QAAL,GAAc,IAAIX,cAAJ,EAAd;AACA;;AAEDY,EAAAA,aAAa,GAAS;AACrB,SAAKJ,mBAAL,CAAyBI,aAAzB;AACA,SAAKH,eAAL,CAAqBG,aAArB;AACA,SAAKF,cAAL,CAAoBE,aAApB;AAEA,QAAIC,KAAK,GAAGX,mBAAmB,GAC9B,KAAKM,mBAAL,CAAyBM,WAAzB,CAAqCC,CAD1B,GAC8BZ,yBAD9B,GAEX,KAAKM,eAAL,CAAqBK,WAArB,CAAiCC,CAFtB,GAE0BZ,yBAF1B,GAGX,KAAKO,cAAL,CAAoBI,WAApB,CAAgCC,CAHrB,GAIXX,UAJD;AAMA,QAAIY,MAAM,GAAGX,QAAQ,GACnBY,IAAI,CAACC,GAAL,CAAS,KAAKV,mBAAL,CAAyBM,WAAzB,CAAqCK,CAA9C,EAAiDF,IAAI,CAACC,GAAL,CAAS,KAAKT,eAAL,CAAqBK,WAArB,CAAiCK,CAA1C,EACjD,KAAKT,cAAL,CAAoBI,WAApB,CAAgCK,CADiB,CAAjD,CADW,GAGVd,QAHH;AAMA,SAAKM,QAAL,CAAcC,aAAd;AACAC,IAAAA,KAAK,GAAGI,IAAI,CAACC,GAAL,CAASL,KAAT,EAAgB,KAAKF,QAAL,CAAcG,WAAd,CAA0BC,CAA1B,GAA8BX,UAA9C,CAAR;AACA,SAAKgB,iBAAL,GAAyB,IAAIvB,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBgB,KAAtB,EAA6BG,MAA7B,CAAzB;AAEAA,IAAAA,MAAM,IAAE,KAAKL,QAAL,CAAcG,WAAd,CAA0BK,CAAlC;AAEAH,IAAAA,MAAM,IAAEZ,UAAR;AAEA,SAAKU,WAAL,GAAmB,IAAIjB,WAAJ,CAAgB,CAAhB,EAAmB,CAAnB,EAAsBgB,KAAtB,EAA6BG,MAA7B,CAAnB;AACA;;AAEDK,EAAAA,QAAQ,GAAe;AACtB,UAAMC,QAAoB,GAAG,EAA7B;AACA,UAAMC,MAAM,GAAC,KAAKH,iBAAlB;AACA,UAAMI,QAAQ,GAAC,KAAKV,WAApB;AAEAQ,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQsB,MAAM,CAACG,CAAf,EAAkBH,MAAM,CAACI,CAAzB,CAAd;AACAL,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQsB,MAAM,CAACG,CAAP,GAASH,MAAM,CAACR,CAAxB,EAA2BQ,MAAM,CAACI,CAAlC,CAAd;AACAL,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQsB,MAAM,CAACG,CAAP,GAASH,MAAM,CAACR,CAAxB,EAA2BQ,MAAM,CAACI,CAAP,GAASJ,MAAM,CAACJ,CAA3C,CAAd;AACAG,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQsB,MAAM,CAACG,CAAP,GAAStB,UAAjB,EAA6BmB,MAAM,CAACI,CAAP,GAASJ,MAAM,CAACJ,CAA7C,CAAd;AACAG,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQsB,MAAM,CAACG,CAAP,GAAStB,UAAjB,EAA6BoB,QAAQ,CAACG,CAAT,GAAWH,QAAQ,CAACL,CAApB,GAAsBf,UAAnD,CAAd;AACAkB,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQuB,QAAQ,CAACE,CAAT,GAAWF,QAAQ,CAACT,CAA5B,EAA+BS,QAAQ,CAACG,CAAT,GAAWH,QAAQ,CAACL,CAApB,GAAsBf,UAArD,CAAd;AACAkB,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQuB,QAAQ,CAACE,CAAT,GAAWF,QAAQ,CAACT,CAA5B,EAA+BS,QAAQ,CAACG,CAAT,GAAWH,QAAQ,CAACL,CAAnD,CAAd;AACAG,IAAAA,QAAQ,CAACG,IAAT,CAAc,IAAIxB,GAAJ,CAAQuB,QAAQ,CAACE,CAAjB,EAAoBF,QAAQ,CAACG,CAAT,GAAWH,QAAQ,CAACL,CAAxC,CAAd;AAEA,WAAOG,QAAP;AACA;;AAEDM,EAAAA,SAAS,CAACF,CAAD,EAAYC,CAAZ,EAA4B;AACpC,SAAKP,iBAAL,CAAuBM,CAAvB,GAAyBA,CAAzB;AACA,SAAKN,iBAAL,CAAuBO,CAAvB,GAAyBA,CAAzB;AACA,SAAKb,WAAL,CAAiBY,CAAjB,GAAmBA,CAAnB;AACA,SAAKZ,WAAL,CAAiBa,CAAjB,GAAmBA,CAAnB;AAEA,QAAIE,IAAI,GAAGH,CAAC,GAAGxB,mBAAf;AACA,QAAI4B,IAAI,GAAGH,CAAX;AAEA,QAAII,MAAM,GAAG,KAAKX,iBAAL,CAAuBD,CAAvB,GAAyB,KAAKX,mBAAL,CAAyBM,WAAzB,CAAqCK,CAA3E;AACA,SAAKX,mBAAL,CAAyBoB,SAAzB,CAAmCC,IAAnC,EAAyCC,IAAI,GAACC,MAAM,GAAC,CAArD;AACAF,IAAAA,IAAI,IAAI,KAAKrB,mBAAL,CAAyBM,WAAzB,CAAqCC,CAArC,GAAyCZ,yBAAjD;AAEA4B,IAAAA,MAAM,GAAG,KAAKX,iBAAL,CAAuBD,CAAvB,GAA2B,KAAKV,eAAL,CAAqBK,WAArB,CAAiCK,CAArE;AACA,SAAKV,eAAL,CAAqBmB,SAArB,CAA+BC,IAA/B,EAAqCC,IAAI,GAACC,MAAM,GAAC,CAAjD;AACAF,IAAAA,IAAI,IAAI,KAAKpB,eAAL,CAAqBK,WAArB,CAAiCC,CAAjC,GAAqCZ,yBAA7C;AAEA4B,IAAAA,MAAM,GAAG,KAAKX,iBAAL,CAAuBD,CAAvB,GAA2B,KAAKT,cAAL,CAAoBI,WAApB,CAAgCK,CAApE;AACA,SAAKT,cAAL,CAAoBkB,SAApB,CAA8BC,IAA9B,EAAoCC,IAAI,GAACC,MAAM,GAAC,CAAhD;AAEAF,IAAAA,IAAI,GAAGH,CAAC,GAAGtB,UAAX;AACA0B,IAAAA,IAAI,GAAGH,CAAC,GAAG,KAAKP,iBAAL,CAAuBD,CAAlC;AACA,SAAKR,QAAL,CAAciB,SAAd,CAAwBC,IAAxB,EAA8BC,IAA9B;AACAA,IAAAA,IAAI,IAAE,KAAKnB,QAAL,CAAcG,WAAd,CAA0BK,CAAhC;AACA;;AAEDa,EAAAA,cAAc,GAAsB;AACnC,WAAO,CAAC,KAAKxB,mBAAN,EAA2B,KAAKC,eAAhC,EAAiD,KAAKC,cAAtD,EAAsE,KAAKC,QAA3E,CAAP;AACA;;AAEDsB,EAAAA,aAAa,CAACC,CAAD,EAASC,WAAT,EAAkD;AAC9D,UAAMC,iBAAiB,GAAG,KAAK5B,mBAAL,CAAyByB,aAAzB,CAAuCC,CAAvC,EAA0CC,WAA1C,CAA1B;;AACA,QAAIC,iBAAiB,CAACC,MAAlB,GAA2B,CAA/B,EAAkC;AACjC,aAAOD,iBAAP;AACA;;AACD,QAAI,KAAK5B,mBAAL,CAAyBM,WAAzB,CAAqCwB,QAArC,CAA8CJ,CAA9C,KAAoD,KAAK1B,mBAAL,CAAyB+B,SAAzB,EAAxD,EAA8F;AAC7F,YAAMjB,QAAQ,GAAG,CAAC,KAAKd,mBAAN,CAAjB;AACA,WAAKA,mBAAL,GAA2B,IAAIT,UAAJ,CAAe,MAAf,CAA3B;AACA,aAAOuB,QAAP;AACA;;AACD,UAAMkB,aAAa,GAAC,KAAK/B,eAAL,CAAqBwB,aAArB,CAAmCC,CAAnC,EAAsCC,WAAtC,CAApB;;AACA,QAAIK,aAAa,CAACH,MAAd,GAAuB,CAA3B,EAA8B;AAC7B,aAAOG,aAAP;AACA;;AACD,QAAI,KAAK/B,eAAL,CAAqBK,WAArB,CAAiCwB,QAAjC,CAA0CJ,CAA1C,KAAgD,KAAKzB,eAAL,CAAqB8B,SAArB,EAApD,EAAsF;AACrF,YAAMjB,QAAQ,GAAG,CAAC,KAAKb,eAAN,CAAjB;AACA,WAAKA,eAAL,GAAuB,IAAIV,UAAJ,CAAe,SAAf,CAAvB;AACA,aAAOuB,QAAP;AACA;;AACD,UAAMmB,YAAY,GAAG,KAAK/B,cAAL,CAAoBuB,aAApB,CAAkCC,CAAlC,EAAqCC,WAArC,CAArB;;AACA,QAAIM,YAAY,CAACJ,MAAb,GAAsB,CAA1B,EAA6B;AAC5B,aAAOI,YAAP;AACA;;AACD,QAAI,KAAK/B,cAAL,CAAoBI,WAApB,CAAgCwB,QAAhC,CAAyCJ,CAAzC,KAA+C,KAAKxB,cAAL,CAAoB6B,SAApB,EAAnD,EAAoF;AACnF,YAAMjB,QAAQ,GAAG,CAAC,KAAKZ,cAAN,CAAjB;AACA,WAAKA,cAAL,GAAsB,IAAIX,UAAJ,CAAe,MAAf,CAAtB;AACA,aAAOuB,QAAP;AACA;;AAED,WAAO,KAAKX,QAAL,CAAcsB,aAAd,CAA4BC,CAA5B,EAA+BC,WAA/B,CAAP;AACA;;AAEDO,EAAAA,QAAQ,CAACC,GAAD,EAAsC;AAC7CA,IAAAA,GAAG,CAACC,SAAJ,GAAgB,SAAhB;AAEA,UAAMC,KAAiB,GAAG,KAAKxB,QAAL,EAA1B;AACAsB,IAAAA,GAAG,CAACG,SAAJ;AACAH,IAAAA,GAAG,CAACI,MAAJ,CAAWF,KAAK,CAAC,CAAD,CAAL,CAASnB,CAApB,EAAuBmB,KAAK,CAAC,CAAD,CAAL,CAASlB,CAAhC;;AACA,SAAK,MAAMqB,CAAX,IAAgBH,KAAhB,EAAuB;AACtBF,MAAAA,GAAG,CAACM,MAAJ,CAAWD,CAAC,CAACtB,CAAb,EAAgBsB,CAAC,CAACrB,CAAlB;AACA;;AACDgB,IAAAA,GAAG,CAACO,IAAJ;AAEAP,IAAAA,GAAG,CAACC,SAAJ,GAAgB,SAAhB;AACAD,IAAAA,GAAG,CAACQ,IAAJ,GAAW,YAAX;AACAR,IAAAA,GAAG,CAACS,SAAJ,GAAgB,QAAhB;AACAT,IAAAA,GAAG,CAACU,YAAJ,GAAmB,QAAnB;AAEA,QAAIxB,IAAI,GAAG,KAAKf,WAAL,CAAiBY,CAA5B;AACAiB,IAAAA,GAAG,CAACW,QAAJ,CACC,KADD,EAECzB,IAAI,GAAG3B,mBAAmB,GAAC,CAF5B,EAGC,KAAKkB,iBAAL,CAAuBO,CAAvB,GAA2B,KAAKP,iBAAL,CAAuBD,CAAvB,GAAyB,CAHrD;AAKAU,IAAAA,IAAI,IAAI3B,mBAAmB,GAAG,KAAKM,mBAAL,CAAyBM,WAAzB,CAAqCC,CAAnE;AACA4B,IAAAA,GAAG,CAACW,QAAJ,CACC,GADD,EAECzB,IAAI,GAAG1B,yBAAyB,GAAC,CAFlC,EAGC,KAAKW,WAAL,CAAiBa,CAAjB,GAAqB,KAAKP,iBAAL,CAAuBD,CAAvB,GAAyB,CAH/C;AAKAU,IAAAA,IAAI,IAAI1B,yBAAyB,GAAG,KAAKM,eAAL,CAAqBK,WAArB,CAAiCC,CAArE;AACA4B,IAAAA,GAAG,CAACW,QAAJ,CACC,GADD,EAECzB,IAAI,GAAG1B,yBAAyB,GAAC,CAFlC,EAGC,KAAKW,WAAL,CAAiBa,CAAjB,GAAqB,KAAKP,iBAAL,CAAuBD,CAAvB,GAAyB,CAH/C;AAKA;;AAEDoC,EAAAA,aAAa,GAAa;AACzB,WAAO,MAAP;AACA;;AAEDC,EAAAA,UAAU,CAACtB,CAAD,EAASuB,YAAT,EAAmCd,GAAnC,EAAgF;AAAA;;AACzF,QAAI,CAAC,KAAK7B,WAAL,CAAiBwB,QAAjB,CAA0BJ,CAA1B,CAAL,EAAmC;AAClC,aAAO,IAAP;AACA;;AACD,SAAK1B,mBAAL,4BAA2B,KAAKA,mBAAL,CAAyBgD,UAAzB,CAAoCtB,CAApC,EAAuCuB,YAAvC,EAAqDd,GAArD,CAA3B,yEACI,KAAKnC,mBADT;AAEA,SAAKC,eAAL,4BAAuB,KAAKA,eAAL,CAAqB+C,UAArB,CAAgCtB,CAAhC,EAAmCuB,YAAnC,EAAiDd,GAAjD,CAAvB,yEACI,KAAKlC,eADT;AAEA,SAAKC,cAAL,4BAAsB,KAAKA,cAAL,CAAoB8C,UAApB,CAA+BtB,CAA/B,EAAkCuB,YAAlC,EAAgDd,GAAhD,CAAtB,yEACI,KAAKjC,cADT;AAEA,UAAMgD,MAAM,GAAG,KAAK/C,QAAL,CAAc6C,UAAd,CAAyBtB,CAAzB,EAA4BuB,YAA5B,EAA0Cd,GAA1C,CAAf;;AACA,QAAIe,MAAM,IAAI,IAAd,EAAoB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,sFAAZ;AACA;;AACD,WAAO,IAAP;AACA;;AAlLgC;;AAuLlC,eAAetD,QAAf","sourcesContent":["//@flow strict\n\nimport BoundingBox from './BoundingBox.js';\nimport CasusBlock from './CasusBlock.js';\nimport EmptyBlock from './EmptyBlock.js';\nimport ContainerBlock from './ContainerBlock.js';\nimport Vec from './Vec.js';\n\nimport type {DataType} from './DataType.js';\n\nimport {\n\tFOR_BLOCK_FOR_WIDTH,\n\tFOR_BLOCK_SEMICOLON_WIDTH,\n\tRAMP_WIDTH, \n\tVPADDING\n} from './generateCornerPerim.js';\n\nclass ForBlock extends CasusBlock {\n\n\tinitializationBlock: CasusBlock;\n\texpressionBlock: CasusBlock;\n\tincrementBlock: CasusBlock;\n\tcontents: ContainerBlock;\n\theaderBoundingBox: BoundingBox;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.initializationBlock = new EmptyBlock('VOID');\n\t\tthis.expressionBlock = new EmptyBlock('BOOLEAN');\n\t\tthis.incrementBlock = new EmptyBlock('VOID');\n\t\tthis.contents=new ContainerBlock();\n\t}\n\n\tprecompBounds(): void {\n\t\tthis.initializationBlock.precompBounds();\n\t\tthis.expressionBlock.precompBounds();\n\t\tthis.incrementBlock.precompBounds();\n\n\t\tlet width = FOR_BLOCK_FOR_WIDTH + \n\t\t\tthis.initializationBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH +\n\t\t\tthis.expressionBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH +\n\t\t\tthis.incrementBlock.boundingBox.w +\n\t\t\tRAMP_WIDTH;\n\n\t\tlet height = VPADDING + \n\t\t\t\tMath.max(this.initializationBlock.boundingBox.h, Math.max(this.expressionBlock.boundingBox.h,\n\t\t\t\tthis.incrementBlock.boundingBox.h))\n\t\t\t+ VPADDING;\n\n\n\t\tthis.contents.precompBounds();\n\t\twidth = Math.max(width, this.contents.boundingBox.w + RAMP_WIDTH);\n\t\tthis.headerBoundingBox = new BoundingBox(0, 0, width, height);\t\n\n\t\theight+=this.contents.boundingBox.h;\n\n\t\theight+=RAMP_WIDTH;\n\n\t\tthis.boundingBox = new BoundingBox(0, 0, width, height);\n\t}\n\n\tgetPerim(): Array<Vec> {\n\t\tconst toReturn: Array<Vec> = [];\n\t\tconst header=this.headerBoundingBox;\n\t\tconst bounding=this.boundingBox;\n\n\t\ttoReturn.push(new Vec(header.x, header.y));\n\t\ttoReturn.push(new Vec(header.x+header.w, header.y));\n\t\ttoReturn.push(new Vec(header.x+header.w, header.y+header.h));\n\t\ttoReturn.push(new Vec(header.x+RAMP_WIDTH, header.y+header.h));\n\t\ttoReturn.push(new Vec(header.x+RAMP_WIDTH, bounding.y+bounding.h-RAMP_WIDTH));\n\t\ttoReturn.push(new Vec(bounding.x+bounding.w, bounding.y+bounding.h-RAMP_WIDTH));\n\t\ttoReturn.push(new Vec(bounding.x+bounding.w, bounding.y+bounding.h));\n\t\ttoReturn.push(new Vec(bounding.x, bounding.y+bounding.h));\n\n\t\treturn toReturn;\n\t}\n\n\tprecompXY(x: number, y:number): void {\n\t\tthis.headerBoundingBox.x=x;\n\t\tthis.headerBoundingBox.y=y;\n\t\tthis.boundingBox.x=x;\n\t\tthis.boundingBox.y=y;\n\n\t\tlet curX = x + FOR_BLOCK_FOR_WIDTH;\n\t\tlet curY = y;\n\n\t\tlet vSpace = this.headerBoundingBox.h-this.initializationBlock.boundingBox.h;\n\t\tthis.initializationBlock.precompXY(curX, curY+vSpace/2);\n\t\tcurX += this.initializationBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH;\n\n\t\tvSpace = this.headerBoundingBox.h - this.expressionBlock.boundingBox.h;\n\t\tthis.expressionBlock.precompXY(curX, curY+vSpace/2);\n\t\tcurX += this.expressionBlock.boundingBox.w + FOR_BLOCK_SEMICOLON_WIDTH;\n\n\t\tvSpace = this.headerBoundingBox.h - this.incrementBlock.boundingBox.h;\n\t\tthis.incrementBlock.precompXY(curX, curY+vSpace/2);\n\n\t\tcurX = x + RAMP_WIDTH;\n\t\tcurY = y + this.headerBoundingBox.h;\n\t\tthis.contents.precompXY(curX, curY);\n\t\tcurY+=this.contents.boundingBox.h;\n\t}\n\n\tgetChildBlocks(): Array<CasusBlock> {\n\t\treturn [this.initializationBlock, this.expressionBlock, this.incrementBlock, this.contents];\n\t}\n\n\tremoveBlockAt(v: Vec, removeAfter: boolean): Array<CasusBlock> {\n\t\tconst initializationRes = this.initializationBlock.removeBlockAt(v, removeAfter);\n\t\tif (initializationRes.length > 0) {\n\t\t\treturn initializationRes;\n\t\t}\n\t\tif (this.initializationBlock.boundingBox.contains(v) && this.initializationBlock.draggable()) {\n\t\t\tconst toReturn = [this.initializationBlock];\n\t\t\tthis.initializationBlock = new EmptyBlock('VOID');\n\t\t\treturn toReturn;\n\t\t}\n\t\tconst expressionRes=this.expressionBlock.removeBlockAt(v, removeAfter);\n\t\tif (expressionRes.length > 0) {\n\t\t\treturn expressionRes;\n\t\t}\n\t\tif (this.expressionBlock.boundingBox.contains(v) && this.expressionBlock.draggable()) {\n\t\t\tconst toReturn = [this.expressionBlock];\n\t\t\tthis.expressionBlock = new EmptyBlock('BOOLEAN');\n\t\t\treturn toReturn;\n\t\t}\n\t\tconst incrementRes = this.incrementBlock.removeBlockAt(v, removeAfter);\n\t\tif (incrementRes.length > 0) {\n\t\t\treturn incrementRes;\n\t\t}\n\t\tif (this.incrementBlock.boundingBox.contains(v) && this.incrementBlock.draggable()) {\n\t\t\tconst toReturn = [this.incrementBlock];\n\t\t\tthis.incrementBlock = new EmptyBlock('VOID');\n\t\t\treturn toReturn;\n\t\t}\n\n\t\treturn this.contents.removeBlockAt(v, removeAfter);\n\t}\n\n\tdrawSelf(ctx: CanvasRenderingContext2D): void {\n\t\tctx.fillStyle = '#3322ee';\n\n\t\tconst perim: Array<Vec> = this.getPerim();\n\t\tctx.beginPath();\n\t\tctx.moveTo(perim[0].x, perim[0].y);\n\t\tfor (const p of perim) {\n\t\t\tctx.lineTo(p.x, p.y);\n\t\t}\n\t\tctx.fill();\n\n\t\tctx.fillStyle = '#000000';\n\t\tctx.font = '16px Arial';\n\t\tctx.textAlign = 'center';\n\t\tctx.textBaseline = 'middle';\n\n\t\tlet curX = this.boundingBox.x;\n\t\tctx.fillText(\n\t\t\t'for', \n\t\t\tcurX + FOR_BLOCK_FOR_WIDTH/2,\n\t\t\tthis.headerBoundingBox.y + this.headerBoundingBox.h/2\n\t\t);\n\t\tcurX += FOR_BLOCK_FOR_WIDTH + this.initializationBlock.boundingBox.w;\n\t\tctx.fillText(\n\t\t\t';',\n\t\t\tcurX + FOR_BLOCK_SEMICOLON_WIDTH/2,\n\t\t\tthis.boundingBox.y + this.headerBoundingBox.h/2\n\t\t);\n\t\tcurX += FOR_BLOCK_SEMICOLON_WIDTH + this.expressionBlock.boundingBox.w;\n\t\tctx.fillText(\n\t\t\t';',\n\t\t\tcurX + FOR_BLOCK_SEMICOLON_WIDTH/2,\n\t\t\tthis.boundingBox.y + this.headerBoundingBox.h/2\n\t\t);\n\t}\n\n\tgetReturnType(): DataType {\n\t\treturn 'VOID';\n\t}\n\n\ttryToPlace(v: Vec, blockToPlace: CasusBlock, ctx: ?CanvasRenderingContext2D): ?CasusBlock {\n\t\tif (!this.boundingBox.contains(v)) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.initializationBlock = this.initializationBlock.tryToPlace(v, blockToPlace, ctx) \n\t\t\t?? this.initializationBlock;\n\t\tthis.expressionBlock = this.expressionBlock.tryToPlace(v, blockToPlace, ctx)\n\t\t\t?? this.expressionBlock;\n\t\tthis.incrementBlock = this.incrementBlock.tryToPlace(v, blockToPlace, ctx)\n\t\t\t?? this.incrementBlock;\n\t\tconst result = this.contents.tryToPlace(v, blockToPlace, ctx);\n\t\tif (result != null) {\n\t\t\tconsole.log('ERROR! placing block in for loop contents returned non-null meaning it got replaced!');\n\t\t}\n\t\treturn null;\n\t}\n\n\n}\n\nexport default ForBlock;\n"]},"metadata":{},"sourceType":"module"}